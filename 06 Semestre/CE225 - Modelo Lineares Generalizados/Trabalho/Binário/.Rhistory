selec
summary(ajuste2)
ajuste2.1 <- step(ajuste2, direction = "both")
summary(ajuste2.1)
anova(ajuste2, ajuste2.1, test = 'Chisq')
par(mfrow=c(2,2))
plot(ajuste2.1, 1:4)
influenceIndexPlot(ajuste2.1, vars=c("Cook"), main="Distância de Cook")
influenceIndexPlot(ajuste2.1, vars=c("Studentized"), main="Resíduos Padronizados")
par(mfrow=c(1,2))
res <- qresiduals(ajuste2.1)
plot(res)
residuos <- qresiduals(ajuste2.1)
qqnorm(residuos)
qqline(residuos, col = 2)
envelope=function(modelo){
dados=na.omit(modelo$data)
nsim=100
n=modelo$df.null+1
r1=sort(rstandard(modelo,type='deviance'))
m1=matrix(0,nrow=n,ncol=nsim)
a2=simulate(modelo,nsim=nsim)
for (i in 1:nsim){
dados$y=a2[,i]
aj=update(modelo,y~.,data=dados)
m1[,i]=sort(rstandard(aj,type='deviance'))}
li=apply(m1,1,quantile,0.025)
m=apply(m1,1,quantile,0.5)
ls=apply(m1,1,quantile,0.975)
quantis=qnorm((1:n-0.5)/n)
plot(rep(quantis,2),c(li,ls),type='n',xlab='Percentil da N(0,1)',ylab='Resíduos')
title('Gráfico Normal de Probabilidades')
lines(quantis,li,type='l')
lines(quantis,m,type='l',lty=2)
lines(quantis,ls,type='l')
points(quantis,r1,pch=16,cex=0.75)
}
envelope(ajuste2.1)
hnp(ajuste2.1)
library(hnp)
hnp(ajuste2.1)
plot(allEffects(ajuste2.1), type = 'response', main = '')
perfis <- data.frame(Adhes = c(6,  3),
BNucl = c(9,  1),
Chrom = c(3,  7),
Mitos = c(9,  1),
NNucl = c(8,  3),
Thick = c(2,  4),
UShap = c(6,  5)
)
predict(ajuste2.1, interval = 'prediction', newdata = perfis, type = 'response')
set.seed(1909)
indices <- sample(1:680, size = 477)
dadosajuste <- dados[indices,]
dadosvalid <- dados[-indices,]
pred <- predict(ajuste2.1, newdata = dadosvalid, type = 'response')
corte <- ifelse(pred > 0.5, 'maligno', 'benigno')
tabela <- table(corte, dadosvalid$Class)
colnames(tabela)<- c('benigno', 'maligno')
tabela
sens <- tabela[2,2]/sum(tabela[,2])
sens
espec <- tabela[1,1]/sum(tabela[,1])
espec
pred <- prediction(ajuste2.1$fitted.values, dados$Class)
library(ROCR)
library(ROCR)
install.packages("D:/GitHub/ROCR_1.0-7.zip", repos = NULL, type = "win.binary")
library(ROCR)
install.packages("D:/GitHub/gplots_3.0.1.zip", repos = NULL, type = "win.binary")
install.packages("D:/GitHub/ROCR_1.0-7.zip", repos = NULL, type = "win.binary")
library(gplots)
install.packages("D:/GitHub/gtools_3.8.1.zip", repos = NULL, type = "win.binary")
library(gtools)
library(gplots)
install.packages("D:/GitHub/gdata_2.18.0.zip", repos = NULL, type = "win.binary")
library(gplots)
library(gdata)
library(gtools)
library(gdata)
library(ROCR)
pred <- prediction(ajuste2.1$fitted.values, dados$Class)
perf <- performance(pred,"tpr","fpr")
plot(perf, xlab = '1 - Especificidade', ylab = 'Sensibilidade',
main = "Curva ROC", col = "blue", lwd = 2)
x11()
plot(perf, xlab = '1 - Especificidade', ylab = 'Sensibilidade',
main = "Curva ROC", col = "blue", lwd = 2)
area <- performance(pred,"auc")
area@y.values
scatterplotMatrix(dados[ , 2:10], col = c('Green', 'Red', 'Gray'), lwd = 3)
scatterplotMatrix(dados[ , 2:10], col = c('Red', 'Red', 'Gray'), lwd = 3)
scatterplotMatrix(dados[ , 2:10], lwd = 3)
scatterplotMatrix(dados[ , 2:10], col = 'Red',regLine = list(method=lm, lty=1, lwd=2, col=col[1]), lwd = 3)
scatterplotMatrix(dados[ , 2:10], col = 'Red', lwd = 3)
require(effects)
require(leaps)
require(car)
vendas <- read.csv2("https://docs.ufpr.br//~taconeli//CE22517//Normal2.csv")
vendas <- read.csv('Normal2.csv')
setwd("D:/GitHub/Disciplinas/06 Semestre/CE225 - Modelo Lineares Generalizados/Aulas/Módulo 02 - Revisão de modelos lineares")
vendas <- read.csv('Normal2.csv')
vendas
vendas <- read.csv('Normal2.csv',header = TRUE, sep = ';')
vendas
names(vendas) <- c('Tempo', 'Idade', 'Estudo', 'População', 'Venda')
head(vendas)
options(digits = 5, scipen = 5)
x11()
require(car)
par(cex=1.2)
scatterplotMatrix(vendas, pch = 20, cex.labels = 1.25)
carPalette(palette)
#*********************************
# Standard color palette
palette()
# car standard color palette
carPalette()
# set colors to all black
carPalette(rep("black", 8))
# Use a custom color palette with 12 distinct colors
carPalette(sample(colors(distinct=TRUE), 12))
#*********************************
# Standard color palette
palette()
# car standard color palette
carPalette()
# restore default
carPalette("default")
# car standard color palette
carPalette()
scatterplotMatrix(dados[ , 2:10],
col = 'Red',
lwd = 3,
regLine = list(col=col[1])
)
scatterplotMatrix(dados[ , 2:10],
col = 'Red',
lwd = 3,
regLine = list(col=col[1])
)
scatterplotMatrix(dados[ , 2:10],
col = 'Red',
lwd = 3,
regLine = 'Gray'
)
scatterplotMatrix(dados[ , 2:10],
lwd = 3,
regLine = 'Gray'
)
library(gridExtra)
library(corrplot)
library(car)
library(statmod)
library(effects)
library(gplots)
library(gtools)
library(gdata)
library(ROCR)
library(faraway)
library(ggplot2)
library(hnp)
data(wbca)
dados <- wbca
sum(dados$Class==1)
dados$Class <- ifelse(dados$Class == 0, 1, 0)
sum(dados$Class==1)
head(dados)
summary(dados[ , 2:10])
par(mfrow=c(2,5))
boxplot(dados$Adhes, xlab = '', ylab = '', main = 'Adhes', las=1)
boxplot(dados$BNucl, xlab = '', ylab = '', main = 'BNucl', las=1)
boxplot(dados$Chrom, xlab = '', ylab = '', main = 'Chrom', las=1)
boxplot(dados$Epith, xlab = '', ylab = '', main = 'Epith', las=1)
boxplot(dados$Mitos, xlab = '', ylab = '', main = 'Mitos', las=1)
boxplot(dados$NNucl, xlab = '', ylab = '', main = 'NNucl', las=1)
boxplot(dados$Thick, xlab = '', ylab = '', main = 'Thick', las=1)
boxplot(dados$UShap, xlab = '', ylab = '', main = 'UShap', las=1)
boxplot(dados$USize, xlab = '', ylab = '', main = 'USize', las=1)
mtext(side=2,cex=1.3,line=-1.5,text="Nota na Avaliação Médica",outer=TRUE)
summary(dados[ , 2:10])
par(mfrow=c(2,5))
boxplot(dados$Adhes, xlab = '', ylab = '', main = 'Adhes', las=1)
boxplot(dados$BNucl, xlab = '', ylab = '', main = 'BNucl', las=1)
boxplot(dados$Chrom, xlab = '', ylab = '', main = 'Chrom', las=1)
boxplot(dados$Epith, xlab = '', ylab = '', main = 'Epith', las=1)
boxplot(dados$Mitos, xlab = '', ylab = '', main = 'Mitos', las=1)
boxplot(dados$NNucl, xlab = '', ylab = '', main = 'NNucl', las=1)
boxplot(dados$Thick, xlab = '', ylab = '', main = 'Thick', las=1)
boxplot(dados$UShap, xlab = '', ylab = '', main = 'UShap', las=1)
boxplot(dados$USize, xlab = '', ylab = '', main = 'USize', las=1)
mtext(side=2,cex=1.3,line=-1.5,text="Nota na Avaliação Médica",outer=TRUE)
par(mfrow=c(2,5))
boxplot(dados$Adhes, xlab = '', ylab = '', main = 'Adhes', las=1)
boxplot(dados$BNucl, xlab = '', ylab = '', main = 'BNucl', las=1)
boxplot(dados$Chrom, xlab = '', ylab = '', main = 'Chrom', las=1)
boxplot(dados$Epith, xlab = '', ylab = '', main = 'Epith', las=1)
boxplot(dados$Mitos, xlab = '', ylab = '', main = 'Mitos', las=1)
boxplot(dados$NNucl, xlab = '', ylab = '', main = 'NNucl', las=1)
boxplot(dados$Thick, xlab = '', ylab = '', main = 'Thick', las=1)
boxplot(dados$UShap, xlab = '', ylab = '', main = 'UShap', las=1)
boxplot(dados$USize, xlab = '', ylab = '', main = 'USize', las=1)
mtext(side=2,cex=1.3,line=-1.5,text="Nota na Avaliação Médica",outer=TRUE)
par(mfrow=c(2,5))
boxplot(dados$Adhes, xlab = '', ylab = '', main = 'Adhes', las=1)
boxplot(dados$BNucl, xlab = '', ylab = '', main = 'BNucl', las=1)
boxplot(dados$Chrom, xlab = '', ylab = '', main = 'Chrom', las=1)
boxplot(dados$Epith, xlab = '', ylab = '', main = 'Epith', las=1)
boxplot(dados$Mitos, xlab = '', ylab = '', main = 'Mitos', las=1)
boxplot(dados$NNucl, xlab = '', ylab = '', main = 'NNucl', las=1)
boxplot(dados$Thick, xlab = '', ylab = '', main = 'Thick', las=1)
boxplot(dados$UShap, xlab = '', ylab = '', main = 'UShap', las=1)
boxplot(dados$USize, xlab = '', ylab = '', main = 'USize', las=1)
mtext(side=2,cex=1.3,line=-1.5,text="Nota na Avaliação Médica",outer=TRUE)
par(mfrow=c(3,3), las=1)
hist(dados$Adhes, xlab = '', ylab = '', main = 'Adhes')
g1<-ggplot(dados, aes(x=factor(Class), y=Adhes, color=factor(Class))) +
geom_boxplot()+ xlab('Adhes')+ ylab('') +
theme(legend.title=element_blank())
x11()
corrplot.mixed(cor, upper = "ellipse")
par(mfrow=c(3,3), las=1)
hist(dados$Adhes, xlab = '', ylab = '', main = 'Adhes')
hist(dados$BNucl, xlab = '', ylab = '', main = 'BNucl')
hist(dados$Chrom, xlab = '', ylab = '', main = 'Chrom')
hist(dados$Epith, xlab = '', ylab = '', main = 'Epith')
hist(dados$Mitos, xlab = '', ylab = '', main = 'Mitos')
hist(dados$NNucl, xlab = '', ylab = '', main = 'NNucl')
hist(dados$Thick, xlab = '', ylab = '', main = 'Thick')
hist(dados$UShap, xlab = '', ylab = '', main = 'UShap')
hist(dados$USize, xlab = '', ylab = '', main = 'USize')
g1<-ggplot(dados, aes(x=factor(Class), y=Adhes, color=factor(Class))) +
geom_boxplot()+ xlab('Adhes')+ ylab('') +
theme(legend.title=element_blank())
g2<-ggplot(dados, aes(x=factor(Class), y=BNucl, color=factor(Class))) +
geom_boxplot()+ xlab('BNucl')+ ylab('') +
theme(legend.title=element_blank())
g3<-ggplot(dados, aes(x=factor(Class), y=Chrom, color=factor(Class))) +
geom_boxplot()+ xlab('Chrom')+ ylab('') +
theme(legend.title=element_blank())
g4<-ggplot(dados, aes(x=factor(Class), y=Epith, color=factor(Class))) +
geom_boxplot()+ xlab('Epith')+ ylab('') +
theme(legend.title=element_blank())
g5<-ggplot(dados, aes(x=factor(Class), y=Mitos, color=factor(Class))) +
geom_boxplot()+ xlab('Mitos')+ ylab('') +
theme(legend.title=element_blank())
g6<-ggplot(dados, aes(x=factor(Class), y=NNucl, color=factor(Class))) +
geom_boxplot()+ xlab('NNucl')+ ylab('') +
theme(legend.title=element_blank())
g7<-ggplot(dados, aes(x=factor(Class), y=Thick, color=factor(Class))) +
geom_boxplot()+ xlab('Thick')+ ylab('') +
theme(legend.title=element_blank())
g8<-ggplot(dados, aes(x=factor(Class), y=UShap, color=factor(Class))) +
geom_boxplot()+ xlab('UShap')+ ylab('') +
theme(legend.title=element_blank())
g9<-ggplot(dados, aes(x=factor(Class), y=USize, color=factor(Class))) +
geom_boxplot()+ xlab('USize')+ ylab('') +
theme(legend.title=element_blank())
grid.arrange(g1, g2, g3, g4, g5, g6, g7,g8 ,g9, ncol=3, nrow=3)
cor <- cor(dados[ , 2:10])
corrplot.mixed(cor, upper = "ellipse")
x11()
corrplot.mixed(cor, upper = "ellipse")
x11()
scatterplotMatrix(dados[ , 2:10], col = c('Red', 'Red', 'Gray'), lwd = 3)
x11()
#******************************
#teste de cores
scatterplotMatrix(dados[ , 2:10],
lwd = 3,
regLine = 'Gray'
)
scatterplotMatrix(dados[ , 2:10],
lwd = 3, col = c(method=lm, lty=1, lwd=2, col=col[1])
)
scatterplotMatrix(dados[ , 2:10],
lwd = 3, col = c(method=lm, lty=1, lwd=2, col=carPalette())
)
setwd("D:/GitHub/Disciplinas/06 Semestre/CE225 - Modelo Lineares Generalizados/Trabalho/Binário")
#*********************************
bd <- read.csv('nfl2008_fga.csv',header = TRUE,sep = ';')
head(bd)
#*********************************
bd <- read.csv('nfl2008_fga.csv',header = TRUE,sep = ',')
head(bd)
bd1 <-col(bd,c(4,10,11,14,15,21))
bd1
head(bd1)
bd1 <-bd[,c(4,10,11,14,15,21)]
head(bd1)
summary(bd1)
str(bd1)
names(bd1)<-c('qtr','togo','kicker','dist','home','good')
str(bd1)
head(bd1)
summary(bd1)
str(bd1)
bd1$qtr<-as.factor(bd1$qtr)
str(bd1)
bd1$kicker<-as.factor(bd1$kicker)
bd1$homekick<-as.factor(bd1$home)
bd1$good<-as.factor(bd1$)
summary(bd1)
#*********************************
bd <- read.csv('nfl2008_fga.csv',header = TRUE,sep = ',')
head(bd)
bd1 <-bd[,c(4,10,11,14,15,21)]
head(bd1)
summary(bd1)
names(bd1)<-c('qtr','togo','kicker','dist','home','good')
head(bd1)
summary(bd1)
str(bd1)
bd1$qtr<-as.factor(bd1$qtr)
bd1$kicker<-as.factor(bd1$kicker)
bd1$home<-as.factor(bd1$home)
bd1$good<-as.factor(bd1$good)
str(bd1)
summary(bd1)
names(bd1)<-c('qtr','togo','kicker','dist','home','good')
#*********************************
bd <- read.csv('nfl2008_fga.csv',header = TRUE,sep = ',')
head(bd)
dados <-bd[,c(4,10,11,14,15,21)]
names(dados)<-c('qtr','togo','kicker','dist','home','good')
head(dados)
dados$qtr<-as.factor(dados$qtr)
dados$kicker<-as.factor(dados$kicker)
dados$home<-as.factor(dados$home)
dados$good<-as.factor(dados$good)
summary(dados)
str(dados)
head(bd)
ajuste0<-glm(GOOD~.,family = binomial(link='logit'),data = bd)
summary(ajuste0)
str(bd)
bd$qtr<-as.factor(bd$qtr)
str(bd)
bd$down<-as.factor(bd$down)
str(bd)
bd$kicker<-as.factor(bd$kicker)
str(bd)
bd$homekick<-as.factor(bd$homekick)
str(bd)
bd$GOOD<-as.factor(bd$GOOD)
str(bd)
bd$Missed<-as.factor(bd$Missed)
bd$Blocked<-as.factor(bd$Blocked)
str(bd)
ajuste0<-glm(GOOD~.,family = binomial(link='logit'),data = bd)
summary(ajuste0)
str(bd)
dados <-bd[,c(-1,-2,-3,-13,-20,-22,-23)]
head(dados)
names(dados$GOOD)<-c('good')
head(dados)
names(dados$GOOD)<-c('qtr','min','sec','kickteam','def','down','togo','kicker',
'ydline','distance','homekick','kickdiff','timerem',
'offscore','defscore','good')
str(dados)
dados <-bd[,c(-1,-2,-3,-13,-20,-22,-23)]
names(dados)<-c('qtr','min','sec','kickteam','def','down','togo','kicker',
'ydline','distance','homekick','kickdiff','timerem',
'offscore','defscore','good')
head(dados)
str(dados)
dados$qtr<-as.factor(dados$qtr)
names(dados)<-c('qtr','min','sec','kickteam','def','down','togo','kicker',
'ydline','distance','home','kickdiff','timerem',
'offscore','defscore','good')
str(dados)
#*********************************
bd <- read.csv('nfl2008_fga.csv',header = TRUE,sep = ',')
head(bd)
dados <-bd[,c(-1,-2,-3,-13,-20,-22,-23)]
names(dados)<-c('qtr','min','sec','kickteam','def','down','togo','kicker',
'ydline','distance','home','kickdiff','timerem',
'offscore','defscore','good')
dados$qtr<-as.factor(dados$qtr)
dados$kickteam<-as.factor(dados$kickteam)
dados$def<-as.factor(def)
dados$down<-as.factor(dados$down)
dados$kicker<-as.factor(dados$kicker)
dados$home<-as.factor(dados$home)
dados$good<-as.factor(dados$good)
head(dados)
dados$def<-as.factor(dados$def)
head(dados)
summary(dados)
ajuste0<-glm(good~.,family = binomial(link='logit'),data = bd)
ajuste0<-glm(good~.,family = binomial(link='logit'),data = dados)
summary(ajuste0)
head(dados)
dados <-dados[,c(-4,-5,-8)]
head(dados)
ajuste1<-glm(good~.,family = binomial(link='logit'),data = dados)
summary(ajuste1)
dados <-bd[,c(4,9,10,14,15,16,21)]
str(dados)
names(dados)<-c('qtr','down','togo','distance','home','kickdiff','good')
head(dados)
str(dados)
names(dados)<-c('qtr','down','togo','dist','home','kickdiff','good')
str(dados)
names(dados)<-c('qtr','down','togo','dist','home','diff','good')
dados$qtr<-as.factor(dados$qtr)
dados$down<-as.factor(dados$down)
dados$home<-as.factor(dados$home)
dados$good<-as.factor(dados$good)
str(dados)
ajuste0<-glm(good~.,family = binomial(link='logit'),data = dados)
summary(ajuste0)
dados <-bd[,c(4,9,10,12,14,15,16,21)]
names(dados)<-c('qtr','down','togo','ydline','dist','home','diff','good')
dados$qtr<-as.factor(dados$qtr)
dados$down<-as.factor(dados$down)
dados$home<-as.factor(dados$home)
dados$good<-as.factor(dados$good)
head(dados)
summary(dados)
str(dados)
ajuste0<-glm(good~.,family = binomial(link='logit'),data = dados)
summary(ajuste0)
ajuste1<-glm(good~.,family = binomial(link='logit'),data = dados)
summary(ajuste0)
ajuste1<-glm(good~.,family = binomial(link='logit'),data = dados)
summary(ajuste1)
ajuste2<-glm(good~.,family = binomial(link='probit'),data = dados)
ajuste3<-glm(good~.,family = binomial(link='cloglog'),data = dados)
ajuste4<-glm(good~.,family = binomial(link='cauchit'),data = dados)
data(wbca)
selec <- data.frame(ajuste=c('logito', 'probito', 'cloglog', 'cauchy'),
aic=c(AIC(ajuste1), AIC(ajuste2), AIC(ajuste3), AIC(ajuste4)),
logLik=c(logLik(ajuste1),logLik(ajuste2),logLik(ajuste3),logLik(ajuste4)))
selec
ajuste3.1 <- step(ajuste3, direction = "both")
s
ajuste3.1 <- step(ajuste3, direction = "both")
summary(ajuste3.1)
ajuste3.1 <- step(ajuste3, direction = "both")
ajuste3.1 <- step(ajuste3, direction = "backward")
ajuste3.1 <- step(ajuste3, direction = "forward")
selec <- data.frame(ajuste=c('logito', 'probito', 'cloglog', 'cauchy'),
aic=c(AIC(ajuste1), AIC(ajuste2), AIC(ajuste3), AIC(ajuste4)),
logLik=c(logLik(ajuste1),logLik(ajuste2),logLik(ajuste3),logLik(ajuste4)))
selec
ajuste3.1 <- step(ajuste3, direction = "forward")
summary(ajuste3.1)
dados <-bd[,c(4,9,10,14,15,16,21)]
names(dados)<-c('qtr','down','togo','dist','home','diff','good')
dados$qtr<-as.factor(dados$qtr)
dados$down<-as.factor(dados$down)
dados$home<-as.factor(dados$home)
dados$good<-as.factor(dados$good)
ajuste0<-glm(good~.,family = binomial(link='logit'),data = dados)
summary(ajuste0)
ajuste1<-glm(good~.,family = binomial(link='logit'),data = dados)
ajuste2<-glm(good~.,family = binomial(link='probit'),data = dados)
ajuste3<-glm(good~.,family = binomial(link='cloglog'),data = dados)
ajuste4<-glm(good~.,family = binomial(link='cauchit'),data = dados)
selec <- data.frame(ajuste=c('logito', 'probito', 'cloglog', 'cauchy'),
aic=c(AIC(ajuste1), AIC(ajuste2), AIC(ajuste3), AIC(ajuste4)),
logLik=c(logLik(ajuste1),logLik(ajuste2),logLik(ajuste3),logLik(ajuste4)))
selec
ajuste3.1 <- step(ajuste3, direction = "forward")
ajuste3.1 <- step(ajuste3, direction = "both")
ajuste3.3 <- step(ajuste3, direction = "backward")
ajuste3.2 <- step(ajuste3, direction = "forward")
summary(ajuste3.2)
dados1<-dados[,c(4,9,10,14,15,16,21)]
head(dados)
dados1<-dados[,c(4,5,7)]
head(dados)
head(dados2)
summary(dados2)
str(dados2)
head(dados1)
summary(dados1)
str(dados1)
ajuste1<-glm(good~.,family = binomial(link='logit'),data = dados1)
ajuste2<-glm(good~.,family = binomial(link='probit'),data = dados1)
ajuste3<-glm(good~.,family = binomial(link='cloglog'),data = dados1)
ajuste4<-glm(good~.,family = binomial(link='cauchit'),data = dados1)
selec <- data.frame(ajuste=c('logito', 'probito', 'cloglog', 'cauchy'),
aic=c(AIC(ajuste1), AIC(ajuste2), AIC(ajuste3), AIC(ajuste4)),
logLik=c(logLik(ajuste1),logLik(ajuste2),logLik(ajuste3),logLik(ajuste4)))
selec
ajuste2.1 <- step(ajuste2, direction = "both")
ajuste2.2 <- step(ajuste2, direction = "forward")
ajuste2.3 <- step(ajuste2, direction = "backward")
selec2<- data.frame(ajuste=c('both', 'forward', 'backward'),
aic=c(AIC(ajuste2.1), AIC(ajuste2.2), AIC(ajuste2.3)),
logLik=c(logLik(ajuste2.1),logLik(ajuste2.2),logLik(ajuste2.3)))
selec2
selec
selec2<- data.frame(ajuste=c('ajuste2.1', 'ajuste2.2', 'ajuste2.3'),
aic=c(AIC(ajuste2.1), AIC(ajuste2.2), AIC(ajuste2.3)),
logLik=c(logLik(ajuste2.1),logLik(ajuste2.2),logLik(ajuste2.3)))
selec
selec2
summary(ajuste2.1)
summary(ajuste2.1)
selec2
selec2<- data.frame(ajuste=c('ajuste2.1', 'ajuste2.2', 'ajuste2.3'),
aic=c(AIC(ajuste2.1), AIC(ajuste2.2), AIC(ajuste2.3)),
logLik=c(logLik(ajuste2.1),logLik(ajuste2.2),logLik(ajuste2.3))
devresidual=c(deviance(ajuste2.1),deviance(ajuste2.2),deviance(ajuste2.3)))
selec2<- data.frame(ajuste=c('ajuste2.1', 'ajuste2.2', 'ajuste2.3'),
aic=c(AIC(ajuste2.1), AIC(ajuste2.2), AIC(ajuste2.3)),
logLik=c(logLik(ajuste2.1),logLik(ajuste2.2),logLik(ajuste2.3)),
devresidual=c(deviance(ajuste2.1),deviance(ajuste2.2),deviance(ajuste2.3)))
selec2
