residuos <- qresid(ajuste1)
ajustados <- predict(ajuste1)
install.packages("D:/GitHub/hnp_1.2-6.zip", repos = NULL, type = "win.binary")
install.packages("D:/GitHub/statmod_1.4.30.zip", repos = NULL, type = "win.binary")
require(hnp)
require(statmod)
hnp(ajuste1, pch = 20, cex = 1.2)
residuos <- qresid(ajuste1)
ajustados <- predict(ajuste1)
par(mfrow = c(1,2))
plot(residuos ~ ajustados, pch = 20, cex = 1.4, col = 'blue')
qqnorm(residuos, pch = 20, cex = 1.4, col = 'blue')
qqline(residuos)
names(ajuste1)
mod6$aic
aic <-c(mod3$aic,mod4$aic,mod5$aic,mod6$aic)
aic
aic <-cbind(mod3$aic,mod4$aic,mod5$aic,mod6$aic)
aic
summary(mod6)
mod3 <- glm(vendas~Destaque, data = vendas2, family = poisson(link = "log"))
summary(mod3)
names(mod6)
summary(mod6)
names(mod6)
mod6$coefficients
mod6$model
coefficients
names(mod6)
summary(mod6)
mod6$deviance
vet_dev <-cbind(mod3$deviance,mod4$deviance,mod5$deviance,mod6$deviance)
vet_aic
vet_aic <-cbind(mod3$aic,mod4$aic,mod5$aic,mod6$aic)
vet_aic
vet_dev
summary(mod6)
names(mod6)
mod6$df.residual
vet_dfr <-cbind(mod3$df.residual,mod4$df.residual,mod5$df.residual,mod6$df.residual)
vet_dfr
str(vendas2)
dim(vendas2)
summary(mod6)
names(mod6)
mod6$rank
mod6$contrasts
mod6$fitted.values
summary(mod6)
names(mod6)
mod6$model
summary(mod6)
names(mod6)
tab_diag <-data.frame(vet_aic,vet_dev,vet_dfr, c("AIC","Deviance","GrausLib"))
tab_diag
vet_aic <-c(mod3$aic,mod4$aic,mod5$aic,mod6$aic)
vet_dev <-c(mod3$deviance,mod4$deviance,mod5$deviance,mod6$deviance)
vet_dfr <-c(mod3$df.residual,mod4$df.residual,mod5$df.residual,mod6$df.residual)
tab_diag <-data.frame(cbind(vet_aic,vet_dev,vet_dfr), c("AIC","Deviance","GrausLib"))
tab_diag <-data.frame(cbind(vet_aic,vet_dev,vet_dfr), names=c("AIC","Deviance","GrausLib"))
tab_diag <-data.frame(vet_aic,vet_dev,vet_dfr)
tab_diag
names(tab_diag)<- c("AIC","Deviance","GrausLib")
tab_diag
BIC(mod5)
modelo <- c("mod3","mod4","mod5","mod6")
vet_aic <-c(mod3$aic,mod4$aic,mod5$aic,mod6$aic)
vet_dev <-c(mod3$deviance,mod4$deviance,mod5$deviance,mod6$deviance)
vet_dfr <-c(mod3$df.residual,mod4$df.residual,mod5$df.residual,mod6$df.residual)
tab_diag <-data.frame(modelo,vet_aic,vet_dev,vet_dfr)
names(tab_diag)<- c("Modelo","AIC","Deviance","GrausLib")
tab_diag
vet_bic <-c(BIC(mod3),BIC(mod4),BIC(mod5),BIC(mod6))
vet_bic <-c(BIC(mod3),BIC(mod4),BIC(mod5),BIC(mod6))
tab_diag <-data.frame(modelo,vet_aic,vet_bic,vet_dev,vet_dfr)
names(tab_diag)<- c("Modelo","AIC","BIC","Deviance","GrausLib")
tab_diag
require(effects)
require(leaps)
require(car)
library(faraway)
db<-faraway::africa
db
head(db)
levels(db)
faraway::gavote
faraway::happy
faraway::kanga
db<-faraway::kanga
head(db)
mod1<-glm(db$sex~.,family = binomial(link = 'logit'))
mod1<-glm(sex~.,family = binomial(link = 'logit'),data = db)
summary(mod1)
nassCDS <- nassCDS %>%
mutate(dead1 = as.integer(dead))
nassCDS <- nassCDS %>% mutate(dead1 = as.integer(dead))
library(dplyr)
library(DAAG)
library(ggplot2)
library(texreg)
library(visreg)
library(DAAG)
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(texreg)
library(visreg)
install.packages("D:/GitHub/dplyr_0.7.8.zip", repos = NULL, type = "win.binary")
install.packages("D:/GitHub/visreg_2.5-0.zip", repos = NULL, type = "win.binary")
install.packages("D:/GitHub/texreg_1.36.23.zip", repos = NULL, type = "win.binary")
library(dplyr)
install.packages("D:/GitHub/rlang_0.3.0.1.zip", repos = NULL, type = "win.binary")
library(dplyr)
library(DAAG)
head(nassCDS)
dim(nassCDS)
nassCDS <- nassCDS %>%
mutate(dead1 = as.integer(dead))
nassCDS <- nassCDS %>% mutate(dead1 = as.integer(dead))
base<-data(nassCDS)
library(dplyr)
library(rlang)
install.packages("D:/GitHub/rlang_0.3.0.1.zip", repos = NULL, type = "win.binary")
library(rlang)
install.packages("D:/GitHub/Rnets_1.0.2.zip", repos = NULL, type = "win.binary")
library(Rnets)
install.packages("D:/GitHub/glasso_1.10.zip", repos = NULL, type = "win.binary")
library(glasso)
library(Rnets)
install.packages("D:/GitHub/igraph_1.2.2.zip", repos = NULL, type = "win.binary")
library(igraph)
library(Rnets)
library(rlang)
install.packages("D:/GitHub/rlang_0.3.0.1.zip", repos = NULL, type = "win.binary")
library(dplyr)
nassCDS <- nassCDS %>% mutate(dead1 = as.integer(dead))
library(rlang)
library(glasso)
library(igraph)
library(glasso)
library(igraph)
library(Rnets)
library(rlang)
library(dplyr)
library(DAAG)
library(ggplot2)
library(texreg)
library(visreg)
library(DAAG)
library(glasso)
library(igraph)
library(Rnets)
library(rlang)
install.packages("D:/GitHub/rlang_0.3.0.1.zip", repos = NULL, type = "win.binary")
library(rlang)
library(Rnets)
library(dplyr)
install.packages("D:/GitHub/Rcpp_1.0.0.zip", repos = NULL, type = "win.binary")
library(Rcpp)
install.packages("D:/GitHub/Rcpp_1.0.0.zip", repos = NULL, type = "win.binary")
library(Rcpp)
library(dplyr)
library(igraph)
library(glasso)
base<-data(nassCDS)
library(glasso)
library(igraph)
library(Rnets)
library(rlang)
library(Rcpp)
library(dplyr)
library(DAAG)
library(ggplot2)
library(texreg)
library(visreg)
library(DAAG)
install.packages("D:/GitHub/bindrcpp_0.2.2.zip", repos = NULL, type = "win.binary")
library(bindrcpp)
install.packages("D:/GitHub/bindr_0.1.1.zip", repos = NULL, type = "win.binary")
library(bindr)
library(bindrcpp)
library(dplyr)
install.packages("D:/GitHub/tidyselect_0.2.5.zip", repos = NULL, type = "win.binary")
library(tidyselect)
library(glasso)
library(igraph)
library(Rnets)
library(rlang)
library(Rcpp)
library(bindr)
library(bindrcpp)
library(tidyselect)
library(DAAG)
library(DAAG)
install.packages("D:/GitHub/glue_1.3.0.zip", repos = NULL, type = "win.binary")
library(tidyselect)
install.packages("D:/GitHub/purrr_0.2.5.zip", repos = NULL, type = "win.binary")
library(tidyselect)
library(dplyr)
library(DAAG)
library(ggplot2)
library(texreg)
library(visreg)
library(DAAG)
base<-data(nassCDS)
head(base)
base<-data(nassCDS)
head(base)
base<-data('nassCDS')
head(base)
data(nassCDS)
base<-data(nassCDS)
head(base)
base<- nassCDS
head(base)
str(base)
nassCDS <- nassCDS %>% mutate(dead1 = as.integer(dead))
nassCDS
data(nassCDS)
base<-nassCDS
head(base)
head(base)
str(base)
base <- base %>% mutate(dead1 = as.integer(dead))
base <- base %>% select(seatbelt, dead, dead1, dvcat, sex, ageOFocc, everything())
str(base)
data(nassCDS)
base<-nassCDS
head(base)
base <- base %>% mutate(dead1 = as.integer(dead))
head(base)
base <- base %>% select(seatbelt, dead, dead1, dvcat, sex, ageOFocc, everything())
head(base)
View(nassCDS)
levels(base$dead1)
levels(base$dead1)
summary(base)
head(c(base$dead,base$dead1),100)
head(base$dead1,100)
head(base$dead,100)
head(base$dead,10)
head(base$dead1,10)
nassCDS <- nassCDS %>%
mutate(alive = sjmisc::rec(dead1, rec = "2=0; 1=1")) %>%
select(seatbelt, dead, alive, dvcat, sex, ageOFocc, everything()) %>%
select(-dead1)
data(nassCDS)
library(glasso)
library(igraph)
library(Rnets)
library(rlang)
library(Rcpp)
library(bindr)
library(bindrcpp)
library(tidyselect)
library(dplyr)
library(ggplot2)
library(texreg)
library(visreg)
library(DAAG)
data(nassCDS)
base<- nassCDS
head(base$dead1,10)
base <- base %>% mutate(dead1 = as.integer(dead))
base <- base %>% select(seatbelt, dead, dead1, dvcat, sex, ageOFocc, everything())
head(base)
base <- base %>%
mutate(alive = sjmisc::rec(dead1, rec = "2=0; 1=1")) %>%
select(seatbelt, dead, alive, dvcat, sex, ageOFocc, everything()) %>%
select(-dead1)
head(base)
summary(base)
base <- base %>%
mutate(alive = sjmisc::rec(dead1, rec = "2=0; 1=1")) %>%
select(seatbelt, dead, alive, dvcat, sex, ageOFocc, everything()) %>%
select(-dead1)
install.packages("D:/GitHub/sjmisc_2.7.6.zip", repos = NULL, type = "win.binary")
library(sjmisc)
install.packages("D:/GitHub/broom_0.5.0.zip", repos = NULL, type = "win.binary")
library(broom)
install.packages("D:/GitHub/tidyr_0.8.2.zip", repos = NULL, type = "win.binary")
library(tidyr)
library(glasso)
library(igraph)
library(Rnets)
library(rlang)
library(Rcpp)
library(bindr)
library(bindrcpp)
library(tidyselect)
library(dplyr)
library(sjmisc)
library(broom)
library(tidyr)
library(ggplot2)
library(texreg)
library(visreg)
library(DAAG)
data(nassCDS)
base<- nassCDS
base <- base %>% mutate(dead1 = as.integer(dead))
base <- base %>% select(seatbelt, dead, dead1, dvcat, sex, ageOFocc, everything())
base <- base %>%
mutate(alive = sjmisc::rec(dead1, rec = "2=0; 1=1")) %>%
select(seatbelt, dead, alive, dvcat, sex, ageOFocc, everything()) %>%
select(-dead1)
install.packages("D:/GitHub/sjlabelled_1.0.14.zip", repos = NULL, type = "win.binary")
library(sjlabelled)
install.packages("D:/GitHub/prediction_0.3.6.zip", repos = NULL, type = "win.binary")
library(prediction)
base <- base %>%
mutate(alive = sjmisc::rec(dead1, rec = "2=0; 1=1")) %>%
select(seatbelt, dead, alive, dvcat, sex, ageOFocc, everything()) %>%
select(-dead1)
install.packages("D:/GitHub/snakecase_0.9.2.zip", repos = NULL, type = "win.binary")
library(snakecase)
base <- base %>%
mutate(alive = sjmisc::rec(dead1, rec = "2=0; 1=1")) %>%
select(seatbelt, dead, alive, dvcat, sex, ageOFocc, everything()) %>%
select(-dead1)
install.packages("D:/GitHub/stringdist_0.9.5.1.zip", repos = NULL, type = "win.binary")
library(stringdist)
base <- base %>%
mutate(alive = sjmisc::rec(dead1, rec = "2=0; 1=1")) %>%
select(seatbelt, dead, alive, dvcat, sex, ageOFocc, everything()) %>%
select(-dead1)
head(base)
str(base)
library(dplyr)
library(DAAG)
library(ggplot2)
library(texreg)
library(visreg)
library(DAAG)
data(nassCDS)
head(nassCDS)
nassCDS <- nassCDS %>%
mutate(dead1 = as.integer(dead))
nassCDS <- nassCDS %>%
select(seatbelt, dead, dead1, dvcat, sex, ageOFocc, everything())
head(nassCDS)
nassCDS <- nassCDS %>%
mutate(alive = sjmisc::rec(dead1, rec = "2=0; 1=1")) %>%
select(seatbelt, dead, alive, dvcat, sex, ageOFocc, everything()) %>%
select(-dead1)
head(nassCDS)
head(base)
head(base$alive,10)
str(base)
head(base)
str(base)
head(base)
base<-base[,c(-2)]
head(base)
summary(base)
m1<-glm(alive~.,family = binomial(link = 'logit'),data = base)
m1
library(sensR)
library(FactoMineR)
install.packages("sensR")
library(sensR)
library(sensR)
library(FactoMineR)
library(sensR)
library(FactoMineR)
library(SensoMineR)
library(sensR)
library(FactoMineR)
library(SensoMineR)
library(FactoMineR)
library(SensoMineR)
library(RVAideMemoire)
library(gdata)
## ------------------------------------------------------------------------
library(FactoMineR)
library(SensoMineR)
library(RVAideMemoire)
library(gdata)
setwd("D:/GitHub/Disciplinas/06 Semestre/CE225 - Modelo Lineares Generalizados/Trabalho/Contagem")
library(ggplot2)
library(gridExtra)
library(corrplot)
dados <- read_xls('Base_final.xls',
col_types = c("text", "numeric", "numeric","numeric", "numeric",
"numeric","numeric", "numeric", "numeric","numeric",
"numeric"))
summary(dados)
par(mfrow=c(2,2))
boxplot(dados$Obitos, xlab = '', ylab = '', main = 'Óbitos no Trânsito', las=1)
boxplot(dados$Frota, xlab = '', ylab = '', main = 'Frota de Veículos', las=1)
boxplot(dados$Pop, xlab = '', ylab = '', main = 'População', las=1)
boxplot(dados$DensDem, xlab = '', ylab = '', main = 'Densidade Demográfica', las=1)
par(mfrow=c(2,3))
boxplot(dados$Alfab, xlab = '', ylab = '', main = '% Alfabetizados', las=1)
boxplot(dados$PopUrb, xlab = '', ylab = '', main = '% Pop Urbana', las=1)
boxplot(dados$Desemp, xlab = '', ylab = '', main = '% Desmpregados', las=1)
boxplot(dados$BaxRen, xlab = '', ylab = '', main = '% Pop Baixa Renda', las=1)
boxplot(dados$Renda, xlab = '', ylab = '', main = 'Renda Média', las=1)
boxplot(dados$IDH, xlab = '', ylab = '', main = 'IDH', las=1)
par(mfrow=c(2,2))
boxplot(dados$Obitos, xlab = '', ylab = '', main = 'Óbitos no Trânsito', las=1)
boxplot(dados$Frota, xlab = '', ylab = '', main = 'Frota de Veículos', las=1)
boxplot(dados$Pop, xlab = '', ylab = '', main = 'População', las=1)
boxplot(dados$DensDem, xlab = '', ylab = '', main = 'Densidade Demográfica', las=1)
dados <- read_xls('Base_final.xls',
col_types = c("text", "numeric", "numeric","numeric", "numeric",
"numeric","numeric", "numeric", "numeric","numeric",
"numeric"))
dados <- read_xls('Base_final.xls',
col_types = c("text", "numeric", "numeric","numeric", "numeric",
"numeric","numeric", "numeric", "numeric","numeric",
"numeric"))
dados
library(ggplot2)
library(gridExtra)
library(corrplot)
dados <- read_xls('Base_final.xls',
col_types = c("text", "numeric", "numeric","numeric", "numeric",
"numeric","numeric", "numeric", "numeric","numeric",
"numeric"))
library(readxl)
dados <- read_xls('Base_final.xls',
col_types = c("text", "numeric", "numeric","numeric", "numeric",
"numeric","numeric", "numeric", "numeric","numeric",
"numeric"))
head(dados)
par(mfrow=c(2,2))
boxplot(dados$Obitos, xlab = '', ylab = '', main = 'Óbitos no Trânsito', las=1)
boxplot(dados$Frota, xlab = '', ylab = '', main = 'Frota de Veículos', las=1)
boxplot(dados$Pop, xlab = '', ylab = '', main = 'População', las=1)
boxplot(dados$DensDem, xlab = '', ylab = '', main = 'Densidade Demográfica', las=1)
par(mfrow=c(2,3))
boxplot(dados$Alfab, xlab = '', ylab = '', main = '% Alfabetizados', las=1)
boxplot(dados$PopUrb, xlab = '', ylab = '', main = '% Pop Urbana', las=1)
boxplot(dados$Desemp, xlab = '', ylab = '', main = '% Desmpregados', las=1)
boxplot(dados$BaxRen, xlab = '', ylab = '', main = '% Pop Baixa Renda', las=1)
boxplot(dados$Renda, xlab = '', ylab = '', main = 'Renda Média', las=1)
boxplot(dados$IDH, xlab = '', ylab = '', main = 'IDH', las=1)
g1  <- ggplot(dados, aes(x=Obitos)) + geom_histogram()+ xlab('Óbitos no Trânsito')+ ylab('')
g2  <- ggplot(dados, aes(x=Frota)) + geom_histogram()+ xlab('Frota de Veículos')+ ylab('')
g3  <- ggplot(dados, aes(x=Pop)) + geom_histogram()+ xlab('População')+ ylab('')
g4  <- ggplot(dados, aes(x=DensDem)) + geom_histogram()+ xlab('Densidade Demográfica')+ ylab('')
grid.arrange(g1, g2, g3, g4, ncol=2, nrow=2)
g5  <- ggplot(dados, aes(x=Alfab)) + geom_histogram()+ xlab('% Alfabetizados')+ ylab('')
g6  <- ggplot(dados, aes(x=PopUrb)) + geom_histogram()+ xlab('% Pop Urbana')+ ylab('')
g7  <- ggplot(dados, aes(x=Desemp)) + geom_histogram()+ xlab('% Desmpregados')+ ylab('')
g8  <- ggplot(dados, aes(x=BaxRen)) + geom_histogram()+ xlab('% Pop Baixa Renda')+ ylab('')
g9  <- ggplot(dados, aes(x=Renda)) + geom_histogram()+ xlab('Renda Média')+ ylab('')
g10 <- ggplot(dados, aes(x=IDH)) + geom_histogram()+ xlab('IDH')+ ylab('')
grid.arrange(g5, g6, g7, g8, g9, g10, ncol=2, nrow=3)
dados$lObitos  <- log(dados$Obitos)
dados$lDensDem <- log(dados$DensDem)
dados$lFrota   <- log(dados$Frota)
dados$lPop     <- log(dados$Pop)
str(dados[ , 12:15])
summary(dados[ , 12:15])
x11()
par(mfrow = c(2,2))
hist(dados$lObitos, main = 'log(óbitos)', xlab = '', ylab = '')
hist(dados$lFrota, main = 'log(Frota)', xlab = '', ylab = '')
hist(dados$lPop, main = 'log(Popução)', xlab = '', ylab = '')
hist(dados$lDensDem, main = 'log(Densidade)', xlab = '', ylab = '')
par(mfrow=c(2,2))
boxplot(dados$Obitos, xlab = '', ylab = '', main = 'Óbitos no Trânsito', las=1)
boxplot(dados$Frota, xlab = '', ylab = '', main = 'Frota de Veículos', las=1)
boxplot(dados$Pop, xlab = '', ylab = '', main = 'População', las=1)
boxplot(dados$DensDem, xlab = '', ylab = '', main = 'Densidade Demográfica', las=1)
par(mfrow=c(2,2))
boxplot(dados$Obitos, xlab = '', ylab = '', main = 'Óbitos no Trânsito', las=1)
boxplot(dados$Frota, xlab = '', ylab = '', main = 'Frota de Veículos', las=1)
boxplot(dados$Pop, xlab = '', ylab = '', main = 'População', las=1)
boxplot(dados$DensDem, xlab = '', ylab = '', main = 'Densidade Demográfica', las=1)
x11()
par(mfrow=c(2,2))
boxplot(dados$Obitos, xlab = '', ylab = '', main = 'Óbitos no Trânsito', las=1)
boxplot(dados$Frota, xlab = '', ylab = '', main = 'Frota de Veículos', las=1)
boxplot(dados$Pop, xlab = '', ylab = '', main = 'População', las=1)
boxplot(dados$DensDem, xlab = '', ylab = '', main = 'Densidade Demográfica', las=1)
g1  <- ggplot(dados, aes(x=Obitos)) + geom_histogram()+ xlab('Óbitos no Trânsito')+ ylab('')
g2  <- ggplot(dados, aes(x=Frota)) + geom_histogram()+ xlab('Frota de Veículos')+ ylab('')
g3  <- ggplot(dados, aes(x=Pop)) + geom_histogram()+ xlab('População')+ ylab('')
g4  <- ggplot(dados, aes(x=DensDem)) + geom_histogram()+ xlab('Densidade Demográfica')+ ylab('')
grid.arrange(g1, g2, g3, g4, ncol=2, nrow=2)
x11()
g1  <- ggplot(dados, aes(x=Obitos)) + geom_histogram()+ xlab('Óbitos no Trânsito')+ ylab('')
g2  <- ggplot(dados, aes(x=Frota)) + geom_histogram()+ xlab('Frota de Veículos')+ ylab('')
g3  <- ggplot(dados, aes(x=Pop)) + geom_histogram()+ xlab('População')+ ylab('')
g4  <- ggplot(dados, aes(x=DensDem)) + geom_histogram()+ xlab('Densidade Demográfica')+ ylab('')
grid.arrange(g1, g2, g3, g4, ncol=2, nrow=2)
x11()
par(mfrow = c(2,2))
hist(dados$lObitos, main = 'log(óbitos)', xlab = '', ylab = '')
hist(dados$lFrota, main = 'log(Frota)', xlab = '', ylab = '')
hist(dados$lPop, main = 'log(Popução)', xlab = '', ylab = '')
hist(dados$lDensDem, main = 'log(Densidade)', xlab = '', ylab = '')
x11()
par(mfrow = c(2,2))
boxplot(dados$lObitos, xlab = '', ylab = '', main = 'log(óbitos)')
boxplot(dados$lFrota, xlab = '', ylab = '', main = 'log(Frota)')
boxplot(dados$lPop, xlab = '', ylab = '', main = 'log(Popução)')
boxplot(dados$lDensDem, xlab = '', ylab = '', main = 'log(Densidade)')
head(dados)
head(dados,50)
head(dados[ ,c(2,12)],50)
head(dados[ ,c(2,12)],20)
summary(dados[ , 12:15])
log(0)
log(1)
log(10)
log(100)
log(0, base = exp(1))
ln(0)
