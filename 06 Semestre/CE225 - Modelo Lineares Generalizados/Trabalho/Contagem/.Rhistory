MARGIN = 2,
FUN = paste0,
collapse = "_")
}) %>%
flatten_chr() %>%
table()
# Obtém as coordenadas radiais para gráfico de conexão.
da <- da %>%
do({
k <- nlevels(.$trat)
a <- seq(0, 2 * pi, length.out = k + 1)[-(k + 1)]
cbind(.,
data.frame(coord_x = sin(a)[as.integer(.$trat)],
coord_y = cos(a)[as.integer(.$trat)]))
})
# Gráfico de conexão.
ext <- c(-1.2, 1.2)
ggplot(data = da,
mapping = aes(coord_x, coord_y)) +
facet_wrap(facets = ~bloc, nrow = 2) +
geom_point() +
geom_polygon(fill = NA, color = "orange") +
geom_label(mapping = aes(label = trat)) +
expand_limits(x = ext, y = ext) +
coord_equal()
ggplot(data = da,
mapping = aes(x = trat, y = y, color = bloc)) +
geom_point() +
stat_summary(mapping = aes(group = 1),
geom = "line",
fun.y = "mean") +
geom_text(mapping = aes(label = bloc),
hjust = 0,
nudge_x = 0.02,
show.legend = FALSE)
install.packages("igraph")
ggplot(data = da,
mapping = aes(x = trat, y = y, color = bloc)) +
geom_point() +
stat_summary(mapping = aes(group = 1),
geom = "line",
fun.y = "mean") +
geom_text(mapping = aes(label = bloc),
hjust = 0,
nudge_x = 0.02,
show.legend = FALSE)
library(igraph)
edg <- by(data = da$trat,
INDICES = da$bloc,
FUN = combn,
m = 2) %>%
flatten_int()
ghp <- graph(edg, directed = FALSE)
plot(ghp,
layout = layout_in_circle,
edge.curved = FALSE)
library(dynlm)
install.packages("dynlm")
install.packages("EnvStats")
library(dynlm)
library(segmented)
library(EnvStats)
install.packages("segmented")
library(segmented)
install.packages("astsa")
library(astsa)
rnorm(15,0,1)
x<-rnorm(15,0,1)
x
x<-matrix(rnorm(15,0,1))
x
help(matrix)
x<-matrix(rnorm(15,0,1),nrow = 5, ncol = 3)
x
cor(x,method = pearson)
set.seed(423)
n=1000
y=matrix(rnorm(n*3),ncol=3)
y
head(y)
cor(y)
set.seed(423)
n=1000
y=matrix(rnorm(n*3),ncol=3)
head(y)
cor(y)
y2=y
for(i in 1:n)
{
y2[1,]=y[i,]+rexp(*1,1/3)
}
for(i in 1:n)
{
y2[1,]=y[i,]+rexp(1,1/3)
}
head(y)
head(y2)
cor(y2)
power.t.test(delta = 15, sd = 20, sig.level = 0.05,power = 0.8, alternative="one.sided")
power.t.test(delta = 15, sd = 20, sig.level = 0.05,n = 23, alternative="one.sided")
power.t.test(delta = 15, sd = 20, sig.level = 0.05,n = 40, alternative="one.sided")
power.t.test(delta = 20, sd = 20, sig.level = 0.05,n = 40, alternative="one.sided")
power.t.test(delta = 20, sd = 20, sig.level = 0.05,power = 0.8, alternative="one.sided")
power.t.test(delta = 15, sd = 30, sig.level = 0.05,power = 0.8, alternative="one.sided")
power.t.test(delta = 20, sd = 30, sig.level = 0.05,power = 0.8, alternative="one.sided")
power.t.test(delta = 15, sd = 20, sig.level = 0.05,n = 31, alternative="one.sided")
power.t.test(delta = 15, sd = 20, sig.level = 0.05,n = 32, alternative="one.sided")
library(ggplot2)
library(gridExtra)
install.packages("meta")
library(meta)
library(lattice)
u <- "x	y1	y2
0	5.5	0.8
0.1	7.2	1.5
0.2	10.4	2.6
0.3	7.4	1.5
0.4	7.2	1.4
0.5	9.1	2.1
0.6	15.9	3.9
0.7	12.7	3.3
0.8	11.3	3
0.9	14.4	3.9
1	14.8	4.2
1.1	17.1	4.8
1.2	31.4	6.9
1.3	17.5	5.5
1.4	27.6	7.3
1.5	19.6	6.7
1.6	27.1	8.2
1.7	21	8.1
1.8	33.8	10.2
1.9	30.2	10.7
2	45.1	12.8"
tb1 <- read.table(textConnection(u), sep = "\t", header = TRUE)
str(tb1)
xyplot(y1 + y2 ~ x,
data = tb1,
outer = TRUE,
scales = "free",
xlab = "x",
ylab = "y")
y1
library(lattice)
u <- "x	y1	y2
0	5.5	0.8
0.1	7.2	1.5
0.2	10.4	2.6
0.3	7.4	1.5
0.4	7.2	1.4
0.5	9.1	2.1
0.6	15.9	3.9
0.7	12.7	3.3
0.8	11.3	3
0.9	14.4	3.9
1	14.8	4.2
1.1	17.1	4.8
1.2	31.4	6.9
1.3	17.5	5.5
1.4	27.6	7.3
1.5	19.6	6.7
1.6	27.1	8.2
1.7	21	8.1
1.8	33.8	10.2
1.9	30.2	10.7
2	45.1	12.8"
tb1 <- read.table(textConnection(u), sep = "\t", header = TRUE)
str(tb1)
xyplot(y1 + y2 ~ x,
data = tb1,
outer = TRUE,
scales = "free",
xlab = "x",
ylab = "y")
tb1
mod1 <- lm(y~x,data = tb1)
tb1 <- read.table(textConnection(u), sep = "\t", header = TRUE)
str(tb1)
xyplot(y1 + y2 ~ x,
data = tb1,
outer = TRUE,
scales = "free",
xlab = "x",
ylab = "y")
mod1 <- lm(y~x, data = tb1)
mod1 <- lm(y1~x, data = tb1)
mod2 <- lm(y2~x, data = tb1)
par(mfrow = c(2,2))
plot(mod1)
xyplot(y1 + y2 ~ x,
data = tb1,
outer = TRUE,
scales = "free",
xlab = "x",
ylab = "y",
type = c("p","smooth"))
mod2 <- lm(y2~x, data = tb1)
mod11 <- lm(log(y1)~x, data = tb1)
mod21 <- lm(log(y2)~x, data = tb1)
#modelo inicial
mod1 <- lm(y1~x, data = tb1)
summary(mod1)
plot(mod1)
mod2 <- lm(y2~x, data = tb1)
summary(mod1)
plot(mod1)
par(mfrow = c(2,2))
plot(mod1)
summary(mod2)
plot(mod2)
plot(mod1)
plot(mod2)
mod12 <-glm(y1~x, data = tb1, family = poisson)
mod12 <-glm(y1~x, data = tb1)
plot(mod12)
mod22 <-glm(y2~x, data = tb1)
plot(mod22)
mod12 <-glm(y1~x, data = tb1,poisson(link = "log"))
plot(mod12)
mod13 <-glm(Y1~x, data = tb1, poisson(link = "log"))
mod13 <-glm(y1~x, data = tb1, poisson(link = "log"))
plot(mod13)
plot(mod13)
mod14<-glm(y1~x data = tb1, Gamma(link = "inverse"))
mod14<-glm(y1~x, data = tb1, Gamma(link = "inverse"))
plot(mod14)
m0<- lm(y1 ~ x + I(x²), data = tb1)
m0<- lm(y1 ~ x + I(x²), data = tb1)
m0 <- lm(y1 ~ x + I(x²), data = tb1)
m0 <- lm(y1 ~ x + I(x^2), data = tb1)
grid <- with(tb1,
data.frame(x = seq(min(x),max(x),length.out = 31)))
grid$y1 <- predict(mo, newdata = grid)
grid$y1 <- predict(m0, newdata = grid)
x11()
plot(y1 ~ x, data = tb1)
lines(y1 ~ x, data = grid, col = "red")
plot(m0)
par(mfrow = c(2,2))
m0 <- lm(y1 ~ x + I(x^2), data = tb1)
plot(m0)
str(tb1)
xyplot(y1 + y2 ~ x,
data = tb1,
outer = TRUE,
scales = "free",
xlab = "x",
ylab = "y",
type = c("p","smooth"))
par(mfrow = c(2,2))
#modelo inicial
mod1 <- lm(y1~x, data = tb1)
summary(mod1)
xyplot(y1 + y2 ~ x,
data = tb1,
outer = TRUE,
scales = "free",
xlab = "x",
ylab = "y",
type = c("p","r"))
xyplot(y1 + y2 ~ x,
data = tb1,
outer = TRUE,
scales = "free",
xlab = "x",
ylab = "y",
type = c("p","r"))
plot(mod1)
glm
plot(mod14)
mod13 <-glm(y1~x, data = tb1, poisson(link = "log"))
plot(mod13)
mod2 <- lm(y2~x, data = tb1)
summary(mod2)
plot(mod2)
library(agricolae) # BIB.test() e design.bib().
library(emmeans)   # emmeans().+++
library(multcomp)  # glht().+++
library(lme4)      # lmer().
library(lmerTest)  # anova() para classe lmerMod.
library(tidyverse) # Manipulação e visualização.
# Funções.
source("mpaer_functions.R")
da <- as_tibble(labestData::PimentelPg185)
str(da)
da
# São 6 repetições de cada tratamento.
# O tamanho do bloco é 3.
addmargins(xtabs(~trat + bloc, data = da))
# Quantas vezes cada par ocorre junto.
by(data = da$trat,
INDICES = da$bloc,
FUN = function(x) {
apply(combn(sort(x), m = 2),
MARGIN = 2,
FUN = paste0,
collapse = "_")
}) %>%
flatten_chr() %>%
table()
# Quantas vezes cada par ocorre junto.
by(data = da$trat,
INDICES = da$bloc,
FUN = function(x) {
apply(combn(sort(x), m = 2),
MARGIN = 2,
FUN = paste0,
collapse = "_")
}) %>%
flatten_chr() %>%
table()
# Quantas vezes cada par ocorre junto.
by(data = da$trat,
INDICES = da$bloc,
FUN = function(x) {
apply(combn(sort(x), m = 2),
MARGIN = 2,
FUN = paste0,
collapse = "_")
}) %>%
flatten_chr() %>%
table()
# Obtém as coordenadas radiais para gráfico de conexão.
da <- da %>%
do({
k <- nlevels(.$trat)
a <- seq(0, 2 * pi, length.out = k + 1)[-(k + 1)]
cbind(.,
data.frame(coord_x = sin(a)[as.integer(.$trat)],
coord_y = cos(a)[as.integer(.$trat)]))
})
# Gráfico de conexão.
ext <- c(-1.2, 1.2)
ggplot(data = da,
mapping = aes(coord_x, coord_y)) +
facet_wrap(facets = ~bloc, nrow = 2) +
geom_point() +
geom_polygon(fill = NA, color = "orange") +
geom_label(mapping = aes(label = trat)) +
expand_limits(x = ext, y = ext) +
coord_equal()
shiny::runApp('nicoli')
library(igraph)
library(ggplot2)
library(gridExtra)
library(corrplot)
library(readxl)
dados <- read_xls('Base_fim.xls',
col_types = c("text", "numeric", "numeric","numeric", "numeric",
"numeric","numeric", "numeric", "numeric"))
setwd("~/Documentos/Git/disciplinas/06 Semestre/CE225 - Modelo Lineares Generalizados/Trabalho/Contagem")
dados <- read_xls('Base_fim.xls',
col_types = c("text", "numeric", "numeric","numeric", "numeric",
"numeric","numeric", "numeric", "numeric"))
tabobt <- table(dados$obit)
tabpobt <- table(round(dados$obit/sum(dados$obit)*100, digits = 2))
barplot(tabobt)
par(mfrow=c(3,3))
boxplot(dados$obit, xlab = '', ylab = '', main = '?bitos no Tr?nsito', las=1)
boxplot(dados$vphab, xlab = '', ylab = '', main = 'Ve?culos a cada 100 Habit', las=1)
boxplot(dados$dens, xlab = '', ylab = '', main = 'Densidade Demogr?fica', las=1)
boxplot(dados$purb, xlab = '', ylab = '', main = '% Pop Urbana', las=1)
boxplot(dados$palf, xlab = '', ylab = '', main = '% Alfabetizados', las=1)
boxplot(dados$pdes, xlab = '', ylab = '', main = '% Desmpregados', las=1)
boxplot(dados$rmed, xlab = '', ylab = '', main = '% Pop Baixa Renda', las=1)
boxplot(dados$idh, xlab = '', ylab = '', main = 'IDH', las=1)
g1 <- ggplot(dados, aes(x=obit)) + geom_histogram()+ xlab('?bitos no Tr?nsito')+ ylab('')
g2 <- ggplot(dados, aes(x=vphab)) + geom_histogram()+ xlab('Ve?culos a cada 100 Habit')+ ylab('')
g3 <- ggplot(dados, aes(x=dens)) + geom_histogram()+ xlab('Densidade Demogr?fica')+ ylab('')
g4 <- ggplot(dados, aes(x=purb)) + geom_histogram()+ xlab('% Pop Urbana')+ ylab('')
g5 <- ggplot(dados, aes(x=palf)) + geom_histogram()+ xlab('% Alfabetizados')+ ylab('')
g6 <- ggplot(dados, aes(x=pdes)) + geom_histogram()+ xlab('% Desmpregados')+ ylab('')
g7 <- ggplot(dados, aes(x=rmed)) + geom_histogram()+ xlab('Renda M?dia')+ ylab('')
g8 <- ggplot(dados, aes(x=idh)) + geom_histogram()+ xlab('IDH')+ ylab('')
grid.arrange(g1, g2, g3, g4, g5, g6, g7, g8, ncol=3, nrow=3)
str(dados)
dados$ldens  <- log(dados$dens)
par(mfrow = c(1,2))
hist(log(dados$dens), main = 'log(Densidade)', xlab = '', ylab = '')
boxplot(log(dados$dens), xlab = '', ylab = '', main = 'log(Densidade)')
library(corrplot)
cor <- cor(dados[ , c(2,3,10,5,6,7,8,9)])
x11()
corrplot.mixed(cor, upper = "ellipse")
library(ggplot2)
library(gridExtra)
library(corrplot)
library(readxl)
dados <- read_xls('Base_fim.xls',
col_types = c("text", "numeric", "numeric","numeric", "numeric",
"numeric","numeric", "numeric", "numeric"))
str(dados)
summary(dados)
head(dados)
tabobt <- table(dados$obit)
tabpobt <- table(round(dados$obit/sum(dados$obit)*100, digits = 2))
X11()
par(mfrow=c(1,2))
barplot(tabobt)
barplot(tabpobt)
x11()
par(mfrow=c(3,3))
boxplot(dados$obit, xlab = '', ylab = '', main = '?bitos no Tr?nsito', las=1)
boxplot(dados$vphab, xlab = '', ylab = '', main = 'Ve?culos a cada 100 Habit', las=1)
boxplot(dados$dens, xlab = '', ylab = '', main = 'Densidade Demogr?fica', las=1)
boxplot(dados$purb, xlab = '', ylab = '', main = '% Pop Urbana', las=1)
boxplot(dados$palf, xlab = '', ylab = '', main = '% Alfabetizados', las=1)
boxplot(dados$pdes, xlab = '', ylab = '', main = '% Desmpregados', las=1)
boxplot(dados$rmed, xlab = '', ylab = '', main = '% Pop Baixa Renda', las=1)
boxplot(dados$idh, xlab = '', ylab = '', main = 'IDH', las=1)
x11()
g1 <- ggplot(dados, aes(x=obit)) + geom_histogram()+ xlab('?bitos no Tr?nsito')+ ylab('')
g2 <- ggplot(dados, aes(x=vphab)) + geom_histogram()+ xlab('Ve?culos a cada 100 Habit')+ ylab('')
g3 <- ggplot(dados, aes(x=dens)) + geom_histogram()+ xlab('Densidade Demogr?fica')+ ylab('')
g4 <- ggplot(dados, aes(x=purb)) + geom_histogram()+ xlab('% Pop Urbana')+ ylab('')
g5 <- ggplot(dados, aes(x=palf)) + geom_histogram()+ xlab('% Alfabetizados')+ ylab('')
g6 <- ggplot(dados, aes(x=pdes)) + geom_histogram()+ xlab('% Desmpregados')+ ylab('')
g7 <- ggplot(dados, aes(x=rmed)) + geom_histogram()+ xlab('Renda M?dia')+ ylab('')
g8 <- ggplot(dados, aes(x=idh)) + geom_histogram()+ xlab('IDH')+ ylab('')
grid.arrange(g1, g2, g3, g4, g5, g6, g7, g8, ncol=3, nrow=3)
dados$ldens  <- log(dados$dens)
x11()
par(mfrow = c(1,2))
hist(log(dados$dens), main = 'log(Densidade)', xlab = '', ylab = '')
boxplot(log(dados$dens), xlab = '', ylab = '', main = 'log(Densidade)')
library(corrplot)
cor <- cor(dados[ , c(2,3,10,5,6,7,8,9)])
x11()
corrplot.mixed(cor, upper = "ellipse")
library(car)
x11()
scatterplotMatrix(dados[ , c(2,3,10,5,6,7,8,9)],
smooth = list(smoother=loessLine, spread=TRUE,
col.smooth = 2, # Cor da m?dia do smooth
col.spread = 2, # Cor do ic do smooth
lty.smooth=1, lwd.smooth=1.5,
lty.spread=3, lwd.spread=1),
regLine = list(method=lm, col = 1), # Cor da regress?o
col = 3) # Cor dos pontos
###################
# Ajuste dos Modelos de Regress?o
###################
library(gamlss)
m1.1<-glm(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh, family=poisson(link='log'),data=dados)
summary(m1.1)
par(mfrow = c(2,2))
plot(m1.1)
# Modelo Gamlss Poisson
m1.2<-gamlss(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh, family=PO, data=dados)
par(mfrow = c(2,2))
plot(m1.2)
# Modelo Poisson com infla??o de zeros (mas sem covari?veis para o componente do excesso de zeros)
m1.3 <- gamlss(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh,family = ZIP, data = dados)
summary(m1.3)
x11()
par(mfrow = c(2,2))
plot(m1.3)
m1.4<-gamlss(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh,
sigma.formula = ~ vphab+log(dens)+purb+palf+pdes+rmed+idh,
family = ZIP, data = dados)
summary(m1.4)
x11()
par(mfrow = c(2,2))
plot(m1.4)
m2.1<-glm.nb(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh, data=dados) ## n?o utilizar
summary(m2.1)
x11()
par(mfrow = c(2,2))
plot(m2.1)
m2.2<-gamlss(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh, family=NBI, data=dados)
summary(m2.2)
x11()
par(mfrow = c(2,2))
plot(m2.2)
coef(m2.1)
coef(m2.2)
m2.3<-gamlss(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh, family=NBII, data=dados)
summary(m2.3)
x11()
par(mfrow = c(2,2))
plot(m2.3)
m2.4<-gamlss(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh, family=NBF, data=dados)
summary(m2.4)
x11()
par(mfrow = c(2,2))
plot(m2.4)
m2.5<-gamlss(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh,family = ZINBI, data = dados)
summary(m2.5)
x11()
par(mfrow = c(2,2))
plot(m2.5) #ajuste interessante
Dev    = c(deviance(m1.1),deviance(m1.2),deviance(m1.3),deviance(m1.4),
deviance(m2.1),deviance(m2.2),deviance(m2.3),
deviance(m2.4),deviance(m2.5),deviance(m2.6))
Ajuste = c('Po_Glm-1.1','Po_Gaml-1.2','Po_Zip-1.3','Po_ZipIPCov-1.4',
'Bn_Glm-2.1','Bn_TpI-2.2','Bn_TpII-2.3','Bn_Fam-2.4','Bn_Zinbi-2.5','Bn_ZinbiCOv-2.6')
Dev    = c(deviance(m1.1),deviance(m1.2),deviance(m1.3),deviance(m1.4),
deviance(m2.1),deviance(m2.2),deviance(m2.3),
deviance(m2.4),deviance(m2.5),deviance(m2.6))
AIC    = c(AIC(m1.1),AIC(m1.2),AIC(m1.3),AIC(m1.4),
AIC(m2.1),AIC(m2.2),AIC(m2.3),
AIC(m2.4),AIC(m2.5),AIC(m2.6))
LVeros = c(logLik(m1.1),logLik(m1.2),logLik(m1.3),logLik(m1.4),
logLik(m2.1),logLik(m2.2),logLik(m2.3),
logLik(m2.4),logLik(m2.5),logLik(m2.6))
m2.6<-gamlss(obit~vphab+log(dens)+purb+palf+pdes+rmed+idh,
nu.formula = ~ vphab+log(dens)+purb+palf+pdes+rmed+idh,
family = ZINBI, data = dados)
summary(m2.6)
x11()
par(mfrow = c(2,2))
plot(m2.6)
