install.packages(c("dynlm", "EnvStats", "segmented"))
library(segmented)
library(dynlm)
library(EnvStats)
library(astsa)
View(rec)
length(rec)
nrow(rec)
plot(cmort, main="Mortalidade Cardiovascular", xlab="", ylab="")
help(cmort)
acf2(cmort)
acf2(cmort)
length(rec)
nrow(rec)
plot(cmort, main="Mortalidade Cardiovascular", xlab="", ylab="")
help(cmort)
acf2(cmort)
cmort
help(cmort)
Anomaly = c(-0.11,-0.13,-0.01,-0.04,-0.42,-0.23,-0.25,-0.45,-0.23,0.04,-0.22,-0.55,
-0.40,-0.39,-0.32,-0.32,-0.27,-0.15,-0.21,-0.25,-0.05,-0.05,-0.30,-0.35,
-0.42,-0.25,-0.15,-0.41,-0.30,-0.31,-0.21,-0.25,-0.33,-0.28,-0.02,0.06,
-0.20,-0.46,-0.33,-0.09,-0.15,-0.04,-0.09,-0.16,-0.11,-0.15,0.04,-0.05,0.01,
-0.22,-0.03,0.03,0.04,-0.11,0.05,-0.08,0.01,0.12,0.15,-0.02,0.14,0.11,
0.10,0.06,0.10,-0.01,0.01,0.12,-0.03,-0.09,-0.17,-0.02,0.03,0.12,-0.09,-0.09,
-0.18,0.08,0.10,0.05,-0.02,0.10,0.05,0.03,-0.25,-0.15,-0.07,-0.02,-0.09,
0.00,0.04,-0.10,-0.05,0.18,-0.06,-0.02,-0.21,0.16,0.07,0.13,0.27,0.40,
0.10,0.34,0.16,0.13,0.19,0.35,0.42,0.28,0.49,0.44,0.16,0.18,0.31,0.47,
0.36,0.40,0.71,0.43,0.41,0.56,0.70,0.66,0.60)
CO2 = c(290.7,291.2,291.7,292.1,292.6,293.0,293.3,293.6,293.8,294.0,294.2,294.3,
294.5,294.6,294.7,294.8,294.9,295.0,295.2,295.5,295.8,296.1,296.5,296.8,
297.2,297.6,298.1,298.5,298.9,299.3,299.7,300.1,300.4,300.8,301.1,301.4,301.7,
302.1,302.4,302.7,303.0,303.4,303.8,304.1,304.5,305.0,305.4,305.8,306.3,306.8,307.2,
307.7,308.2,308.6,309.0,309.4,309.8,310.0,310.2,310.3,310.4,310.4,310.3,
310.2,310.1,310.1,310.1,310.2,310.3,310.5,310.7,311.1,311.5,311.9,312.4,
313.0,313.6,314.2,314.9,315.8,316.6,317.3,318.1,318.7,319.2,320.0,321.1,
322.0,322.9,324.2,325.2,326.1,327.2,328.8,329.7,330.7,331.8,333.3,334.6,
336.9,338.7,339.9,341.1,342.8,344.4,345.9,347.2,348.9,351.5,352.9,354.2,
355.6,356.4,357.0,358.9,360.9,362.6,363.8,366.6,368.3,369.5,371.0,373.1,375.6,377.4)
Anomaly = ts(Anomaly, start = 1880, end = 2004, frequency = 1)
CO2 = ts(CO2, start = 1880, end = 2004, frequency = 1)
par(mar=c(3, 7, 1, 1) + 0.1)
## Plotando o primeiro conjunto de dados e desenhando seu eixo
plot.ts(Anomaly, pch=16, axes=FALSE, ylim=c(-0.6,0.8), xlab="", ylab="", type="b", col="black", main="")
axis(2, ylim=c(-1,1), col="black", las=1)  ## las=1 faz etiquetas horizontais
mtext("Anomalia global da temperatura média do ar na superfície em °C", side=2, line=2.5)
box()
par(new=TRUE)
## Plotando o segundo gráfico e colocando a escala do eixo à direita
plot.ts(CO2, pch=15, xlab="", ylab="", ylim=c(290,380), axes=FALSE, type="b", col="red")
axis(2, ylim=c(0,100), lwd=2, line=3.5, col="red", col.axis = "red")
mtext(expression(paste(CO[2]," em ppmv")), side=2, line=5.3, col="red")
axis(1)
grid()
library(astsa)
which(time(Anomaly)==1965.000)  # 86
Anomaly1 = ts(Anomaly[86:length(Anomaly)], start = 1965, freq = 1)
CO21 = ts(CO2[86:length(CO2)], start = 1965, freq = 1)
par(mar=c(3, 7, 1, 1) + 0.1)
## Plotando o primeiro conjunto de dados e desenhando seu eixo
plot.ts(Anomaly1, pch=16, axes=FALSE, ylim=c(-0.6,0.8), xlab="", ylab="", type="b", col="black", main="")
axis(2, ylim=c(-1,1), col="black", las=1)  ## las=1 faz etiquetas horizontais
mtext("Anomalia global da temperatura média do ar na superfície em °C", side=2, line=2.5)
box()
par(new=TRUE)
## Plotando o segundo gráfico e colocando a escala do eixo à direita
plot.ts(CO21, pch=15, xlab="", ylab="", ylim=c(290,380), axes=FALSE, type="b", col="red")
axis(2, ylim=c(0,100), lwd=2, line=3.5, col="red", col.axis = "red")
mtext(expression(paste(CO[2]," em ppmv")), side=2, line=5.3, col="red")
axis(1)
grid()
par(mar=c(4, 4, 1, 2))
global.temp = ts.intersect(Resp = Anomaly1, Resp1 = lag(Anomaly1,-1), Resp2 = CO21)
(adj01 = lm(Resp ~ Resp1+Resp2, data = global.temp, na.action=NULL))
acf2(resid(adj01)) # sugere levemente AR(5)
adj02 = sarima(global.temp[,1], 5, 0, 0, xreg = global.temp[,2:3])
par(mar=c(4, 4, 1, 2))
global.temp = ts.intersect(Resp = Anomaly1, Resp1 = lag(Anomaly1,-1), Resp2 = CO21)
(adj01 = lm(Resp ~ Resp1+Resp2, data = global.temp, na.action=NULL))
acf2(resid(adj01)) # sugere levemente AR(5)
adj02 = sarima(global.temp[,1], 5, 0, 0, xreg = global.temp[,2:3])
adj02[["ttable"]]
library(forecast)
adj03 = Arima(global.temp[,1], order = c(5, 0, 0), xreg = global.temp[,2:3])
par(mar=c(4, 4, 1, 2))
ts.plot(Anomaly1, fitted(adj03), col = c(6,4), xlab="Tempo")
grid()
acf2(cmort)
install.packages("hnp")
par(mar=c(4,4,0,0));acf2(resid(fit))
---
title: "2º Trabalho - Série Temporais"
subtitle: "Parte III: 10, 18, 20, 31 e 36. Parte IV: 6"
author: "Rafael Morciani Alves da Silva | GRR20160217"
date: '`r Sys.Date() `'
output:
pdf_document: default
header-includes: \usepackage[brazil]{babel}
\usepackage{amsmath}
\usepackage{float}
\usepackage{bm}
---
# PARTE III - Modelos ARIMA
## Exercício 10
- a) Com os dados *cmort* foi ajustado um AR(2) usando regressão linear. Os dados
foram coletados semanalmente ao longo dos anos, por isso a frequência utilizada para
transformar os dados em uma série foi *52*.
library(astsa)
cmort.ts = ts(cmort, freq = 52, start = c(1970,1))
par(mar=c(4,4,0,0.5));plot.ts(cmort.ts)
x.lag1 <- lag(cmort.ts, 1)
x.lag2 <- lag(cmort.ts, 2)
dbajuste = na.omit(cbind(cmort.ts,x.lag2, x.lag1))
fit <- lm(cmort.ts ~ ., data = dbajuste)
par(mar=c(4,4,0,0));acf2(resid(fit))
par(mar=c(4,4,0,0));sarima.for(cmort.ts, 2,0,0, n.ahead = 4)
# Ajustando o AR(2)
AR2 <- arima(cmort, order=c(2,0,0))
# Usando regressão linear
mod1 <- ar.ols(cmort, order=2, demean=FALSE, intercept=TRUE)
# Usando o Yule-Walker
mod2 <- ar.yw(cmort, order=2)
# Usando regressão linear:
mod1$ar
# Usando Yule-Walker:
mod2$ar
# Usando regressão linear:
mod1$asy.se.coef
# Usando Yule-Walker:
mod2$ar
sqrt(diag(mod2$asy.var.coef))
set.seed(123)
arma_sim1 <- arima.sim(model=list(ar=c(.9),ma=c(.9)),n=500)
par(mar=c(4,4,0,0));ts.plot(arma_sim1)
par(mar=c(4,4,3,0));arma_acf1 <- acf(arma_sim1,type="correlation",plot=T)
arma_acf1
par(mar=c(4,4,3,0));arma_pacf1 <-acf(arma_sim1,type="partial",plot=T)
arma_pacf1
ajust1 <- arima(arma_sim1, order = c(1,0,1), seasonal = c(0,0,0))
arma_sim2 <- arima.sim(model=list(ar=c(.9),ma=c(.9)),n=500)
par(mar=c(4,4,0,0));ts.plot(arma_sim2)
par(mar=c(4,4,3,0));arma_acf2 <-acf(arma_sim2,type="correlation",plot=T)
arma_acf2
par(mar=c(4,4,3,0));arma_pacf2 <-acf(arma_sim2,type="partial",plot=T)
arma_pacf2
ajust2 <- arima(arma_sim2, order = c(1,0,1), seasonal = c(0,0,0))
arma_sim3 <- arima.sim(model=list(ar=c(.9),ma=c(.9)),n=500)
par(mar=c(4,4,0,0));ts.plot(arma_sim3)
par(mar=c(4,4,3,0));arma_acf3 <- acf(arma_sim3,type="correlation",plot=T)
arma_acf3
par(mar=c(4,4,3,0));arma_pacf3<-acf(arma_sim3,type="partial",plot=T)
arma_pacf3
gnpgr <- diff(log(gnp))
(Ex31 <- sarima(gnpgr,1,0,0))
```{r, echo=FALSE, fig.align='center', fig.height=5, fig.pos="H"}
# Gráfico da série temporal
par(mar=c(4,4,0.5,0));plot(cpg, xlab = "Tempo", ylab = "Preço mediano anual")
```{r, echo=FALSE, fig.align='center', fig.height=5, fig.pos="H"}
# Ajuste do modelo
da <- data.frame("cpg" = cpg, "t" = 1980:2008)
fit <- lm(I(log(cpg)) ~ t, data = da)
# Ajuste do modelo
da <- data.frame("cpg" = cpg, "t" = 1980:2008)
fit <- lm(I(log(cpg)) ~ t, data = da)
summary(fit)
# Gráfico da série temporal e do modelo ajustado
par(mar=c(4,4,0,0));plot(log(da$cpg[1:29]) ~ da$t, type = "l", col = "black",
xlab = "Tempo", ylab = "Preço mediano anual")
abline(reg = fit, col = "red")
# Gráfico da série temporal
par(mar=c(4,4,0.5,0));plot(cpg, xlab = "Tempo", ylab = "Preço mediano anual")
```{r, echo=FALSE, fig.align='center', fig.height=5, fig.pos="H"}
# Ajuste do modelo
da <- data.frame("cpg" = cpg, "t" = 1980:2008)
fit <- lm(I(log(cpg)) ~ t, data = da)
summary(fit)
# Gráfico da série temporal e do modelo ajustado
par(mar=c(4,4,0,0));plot(log(da$cpg[1:29]) ~ da$t, type = "l", col = "black",
xlab = "Tempo", ylab = "Preço mediano anual")
abline(reg = fit, col = "red")
legend(2000, 10,
lty = c(1, 1),
col = c("black", "red"),
legend = c("Dados", "Ajuste"),
bty = "n",
cex = 1)
legend(2000, 10,
lty = c(1, 1),
col = c("black", "red"),
legend = c("Dados", "Ajuste"),
bty = "n",
cex = 1)
# Half-Normal plot
library(hnp)
par(mar=c(4,4,0,0));hnp(fit)
# Resíduos ~ covariável
par(mar=c(4,4,0,0));plot(residuals(fit) ~ da$t)
abline(h = 0, lty=2)
# Histograma dos resíduos
shapiro.test(residuals(fit))
par(mar=c(4,4,2,0));hist(residuals(fit))
# Autocorrelação dos resíduos
par(mar=c(4,4,3,0));acf(residuals(fit), lag.max = 29)
# Resumo do ajuste e dos resíduos
sarima(xdata = da$cpg, p = 0, d = 0, q = 2, xreg = cbind(da$t))
require(astsa)
data(climhyd)
data <- subset(x = climhyd, select = c('DewPt', 'Inflow'))
data$DewPt <- sqrt(data$DewPt)
data$Inflow <- log(data$Inflow)
data <- ts(data, frequency = 1)
plot.ts(data)
(m1 <- arima(x = data[,1], order = c(0,0,0), seasonal = list(order = c(0,1,1), period = 12)))
(m2 <- arima(x = data[,2], order = c(0,0,0), seasonal = list(order = c(0,1,1), period = 12)))
require(astsa)
par(mar=c(4,4,0,0));ccf2(x = ts(m1$residuals), y =ts(m2$residuals), main = c("Cross Correlation Plot"))
