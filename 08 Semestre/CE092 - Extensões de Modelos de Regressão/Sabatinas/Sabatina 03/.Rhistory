1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
c <- 6
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
library(ggplot2)
theme_set(theme_minimal())
# Modelo 1 ---------------------------------------
# Taxa de variação e intercepto diferentes
fit1 <- lm(y ~ x + g + I(g * x), data = tb)
# Modelo 2 ---------------------------------------
## Só muda o intercepto a taxa de variação continua a mesma
fit2 <- lm(y ~ x + g, data = tb)
# Modelo 3 ---------------------------------------
## Mesma origem
fit3 <- lm(y ~ x + I(x * g), data = tb)
# Modelo 4 ---------------------------------------
## Continuidade
fit4 <- lm(y ~ x + I((x - c) * g), data=tb)
# Modelo 5 ---------------------------------------
## Continuidade + Constante
fit5 <- lm(y ~ I((x - c) * (g - 1)), data = tb)
# Todos gráficos ---------------------------------------------------------------
tb2 <- data.frame(x = seq(min(tb$x), max(tb$x), by = 0.05))
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred2 <- predict(fit2, newdata = tb2)
tb2$pred3 <- predict(fit3, newdata = tb2)
tb2$pred4 <- predict(fit4, newdata = tb2)
tb2$pred5 <- predict(fit5, newdata = tb2)
tb2 <- tidyr::gather(tb2, pred, value, -x, -g)
ggplot(tb2, aes(x = x, y = value, group = g)) +
geom_point(data = tb, aes(x = x, y = y)) +
geom_line() +
facet_wrap(~pred)
options(digits = 4)
# O) FALSE
fit4
sum(residuals(fit1)^2)
sum(residuals(fit2)^2)
sum(residuals(fit3)^2)
sum(residuals(fit4)^2)
sum(residuals(fit5)^2)
sum(residuals(fit1)^2)
sum(residuals(fit2)^2)
sum(residuals(fit3)^2)
sum(residuals(fit4)^2)
sum(residuals(fit5)^2)
# b) TRUE
round(sum(residuals(fit4)^2), 3)
# o) TRUE
sum(residuals(fit4)^2)
# b) TRUE
round(sum(residuals(fit4)^2), 3)
# c) FALSE
predict(fit5, data.frame(x = 7], g = 1))
# c) FALSE
predict(fit5, data.frame(x = 7, g = 1))
data.frame(x = 7, g = 1)
predict(fit2, newdata = data.frame(x = 7, g = 0))
tb2
tb2 <- data.frame(x = seq(min(tb$x), max(tb$x), by = 0.05))
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2$pred5
structure(list(x = c(0.17, 0.88, 0.94, 0.98, 1.66, 1.69, 1.88,
1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
c <- 6
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
library(ggplot2)
theme_set(theme_minimal())
# Modelo 1 ---------------------------------------
# Taxa de variação e intercepto diferentes
fit1 <- lm(y ~ x + g + I(g * x), data = tb)
# Modelo 2 ---------------------------------------
## Só muda o intercepto a taxa de variação continua a mesma
fit2 <- lm(y ~ x + g, data = tb)
# Modelo 3 ---------------------------------------
## Mesma origem
fit3 <- lm(y ~ x + I(x * g), data = tb)
# Modelo 4 ---------------------------------------
## Continuidade
fit4 <- lm(y ~ x + I((x - c) * g), data=tb)
# Modelo 5 ---------------------------------------
## Continuidade + Constante
fit5 <- lm(y ~ I((x - c) * (g - 1)), data = tb)
# Todos gráficos ---------------------------------------------------------------
tb2 <- data.frame(x = seq(min(tb$x), max(tb$x), by = 0.05))
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred2 <- predict(fit2, newdata = tb2)
tb2$pred3 <- predict(fit3, newdata = tb2)
tb2$pred4 <- predict(fit4, newdata = tb2)
tb2$pred5 <- predict(fit5, newdata = tb2)
tb2 <- tidyr::gather(tb2, pred, value, -x, -g)
ggplot(tb2, aes(x = x, y = value, group = g)) +
geom_point(data = tb, aes(x = x, y = y)) +
geom_line() +
facet_wrap(~pred)
options(digits = 4)
# O) FALSE
fit4
# b) FALSE
predict(fit2, newdata = data.frame(x = 6, g = 1))
# c) FALSE
fit1
predict(fit2, newdata = data.frame(x = 5, g = 1))
tb2$pred5
predict(fit5, newdata = data.frame(x = 7, g = 0))
# c) FALSE ????
predict(fit5, data.frame(x = 7, g = 1))
data.frame(nd$x,nd$pred5)
coef(fit1)[2] + coef(fit1)[4]
# O) FALSE
fit4
tb <-structure(list(x = c(0.17, 0.88, 0.94, 0.98, 1.66, 1.69, 1.88,
1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
c <- 5
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
library(ggplot2)
theme_set(theme_minimal())
# Modelo 1 ---------------------------------------
# Taxa de variação e intercepto diferentes
fit1 <- lm(y ~ x + g + I(g * x), data = tb)
# Modelo 2 ---------------------------------------
## Só muda o intercepto a taxa de variação continua a mesma
fit2 <- lm(y ~ x + g, data = tb)
# Modelo 3 ---------------------------------------
## Mesma origem
fit3 <- lm(y ~ x + I(x * g), data = tb)
# Modelo 4 ---------------------------------------
## Continuidade
fit4 <- lm(y ~ x + I((x - c) * g), data=tb)
# Modelo 5 ---------------------------------------
## Continuidade + Constante
fit5 <- lm(y ~ I((x - c) * (g - 1)), data = tb)
# Todos gráficos ---------------------------------------------------------------
tb2 <- data.frame(x = seq(min(tb$x), max(tb$x), by = 0.05))
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred2 <- predict(fit2, newdata = tb2)
tb2$pred3 <- predict(fit3, newdata = tb2)
tb2$pred4 <- predict(fit4, newdata = tb2)
tb2$pred5 <- predict(fit5, newdata = tb2)
tb2 <- tidyr::gather(tb2, pred, value, -x, -g)
ggplot(tb2, aes(x = x, y = value, group = g)) +
geom_point(data = tb, aes(x = x, y = y)) +
geom_line() +
facet_wrap(~pred)
options(digits = 4)
# a) FALSE
fit4
# m) FALSE
fit4
coef(fit4)
fit5
g
tb$g
# Todos gráficos ---------------------------------------------------------------
tb2 <- data.frame(x = seq(min(tb$x), max(tb$x), by = 0.05))
tb2
tb2$g
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2
c <- 6
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
library(ggplot2)
theme_set(theme_minimal())
# Modelo 1 ---------------------------------------
# Taxa de variação e intercepto diferentes
fit1 <- lm(y ~ x + g + I(g * x), data = tb)
# Modelo 2 ---------------------------------------
## Só muda o intercepto a taxa de variação continua a mesma
fit2 <- lm(y ~ x + g, data = tb)
# Modelo 3 ---------------------------------------
## Mesma origem
fit3 <- lm(y ~ x + I(x * g), data = tb)
# Modelo 4 ---------------------------------------
## Continuidade
fit4 <- lm(y ~ x + I((x - c) * g), data=tb)
# Modelo 5 ---------------------------------------
## Continuidade + Constante
fit5 <- lm(y ~ I((x - c) * (g - 1)), data = tb)
# Todos gráficos ---------------------------------------------------------------
tb2 <- data.frame(x = seq(min(tb$x), max(tb$x), by = 0.05))
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred2 <- predict(fit2, newdata = tb2)
tb2$pred3 <- predict(fit3, newdata = tb2)
tb2$pred4 <- predict(fit4, newdata = tb2)
tb2$pred5 <- predict(fit5, newdata = tb2)
tb2 <- tidyr::gather(tb2, pred, value, -x, -g)
ggplot(tb2, aes(x = x, y = value, group = g)) +
geom_point(data = tb, aes(x = x, y = y)) +
geom_line() +
facet_wrap(~pred)
options(digits = 4)
# a) FALSE
fit4
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred2 <- predict(fit2, newdata = tb2)
tb2$pred3 <- predict(fit3, newdata = tb2)
tb2$pred4 <- predict(fit4, newdata = tb2)
tb2$pred5 <- predict(fit5, newdata = tb2)
tb2
tb2
tb2 <- tidyr::gather(tb2, pred, value, -x, -g)
tb2
tb <-structure(list(x = c(0.17, 0.88, 0.94, 0.98, 1.66, 1.69, 1.88,
1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
c <- 6
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
library(ggplot2)
theme_set(theme_minimal())
# Modelo 1 ---------------------------------------
# Taxa de variação e intercepto diferentes
# Modelo 1 ---------------------------------------
# Taxa de variação e intercepto diferentes
fit1 <- lm(y ~ x + g + I(g * x), data = tb)
# Modelo 2 ---------------------------------------
## Só muda o intercepto a taxa de variação continua a mesma
fit2 <- lm(y ~ x + g, data = tb)
# Modelo 3 ---------------------------------------
## Mesma origem
fit3 <- lm(y ~ x + I(x * g), data = tb)
# Modelo 4 ---------------------------------------
## Continuidade
fit4 <- lm(y ~ x + I((x - c) * g), data=tb)
# Modelo 5 ---------------------------------------
## Continuidade + Constante
fit5 <- lm(y ~ I((x - c) * (g - 1)), data = tb)
# Todos gráficos ---------------------------------------------------------------
tb2 <- data.frame(x = seq(min(tb$x), max(tb$x), by = 0.05))
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred2 <- predict(fit2, newdata = tb2)
tb2$pred3 <- predict(fit3, newdata = tb2)
tb2$pred4 <- predict(fit4, newdata = tb2)
tb2$pred5 <- predict(fit5, newdata = tb2)
tb2 <- tidyr::gather(tb2, pred, value, -x, -g)
ggplot(tb2, aes(x = x, y = value, group = g)) +
geom_point(data = tb, aes(x = x, y = y)) +
geom_line() +
facet_wrap(~pred)
options(digits = 4)
# a) FALSE
fit4
# b) FALSE
predict(fit2, newdata = data.frame(x = 6, g = 1))
tb2
write.csv(tb2, "ScoobyDoo.csv", row.names = FALSE)
setwd("~/")
setwd("~/Documentos/Git/disciplinas/08 Semestre/CE092 - Extensões de Modelos de Regressão/Sabatinas/Sabatina 03")
write.csv(tb2, "ScoobyDoo.csv", row.names = T)
tb <-structure(list(x = c(0.17, 0.88, 0.94, 0.98, 1.66, 1.69, 1.88,
1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
c <- 6
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
library(ggplot2)
theme_set(theme_minimal())
# Modelo 1 ---------------------------------------
# Taxa de variação e intercepto diferentes
fit1 <- lm(y ~ x + g + I(g * x), data = tb)
# Modelo 2 ---------------------------------------
## Só muda o intercepto a taxa de variação continua a mesma
fit2 <- lm(y ~ x + g, data = tb)
# Modelo 3 ---------------------------------------
## Mesma origem
fit3 <- lm(y ~ x + I(x * g), data = tb)
# Modelo 4 ---------------------------------------
## Continuidade
fit4 <- lm(y ~ x + I((x - c) * g), data=tb)
# Modelo 5 ---------------------------------------
## Continuidade + Constante
fit5 <- lm(y ~ I((x - c) * (g - 1)), data = tb)
# Todos gráficos ---------------------------------------------------------------
tb2 <- data.frame(x = seq(0, 14, by = 0.05))
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred2 <- predict(fit2, newdata = tb2)
tb2$pred3 <- predict(fit3, newdata = tb2)
tb2$pred4 <- predict(fit4, newdata = tb2)
tb2$pred5 <- predict(fit5, newdata = tb2)
tb2 <- tidyr::gather(tb2, pred, value, -x, -g)
write.csv(tb2, "ScoobyDoo.csv", row.names = T)
ggplot(tb2, aes(x = x, y = value, group = g)) +
geom_point(data = tb, aes(x = x, y = y)) +
geom_line() +
facet_wrap(~pred)
options(digits = 4)
# a) FALSE
fit4
# b) FALSE
predict(fit2, newdata = data.frame(x = 6, g = 1))
# c) FALSE
fit1
predict(fit2, newdata = data.frame(x = 5, g = 1))
# e) TRUE
fit1
write.csv(tb2, "ScoobyDoo.csv", row.names = T)
fit1
fit4
tb <-structure(list(x = c(0.17, 0.88, 0.94, 0.98, 1.66, 1.69, 1.88,
1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
tb
plot(y ~x, data = tb)
C = 6
nd <- data.frame(x = seq(0, 14, by = 0.05))
#nd$x[nd$x == 6.1] <- NA
nd$x[nd$x == 6] <- NA
#nd$x[122] <- NA
#################################################################
# FIT-1
tb$x1 <- ifelse(tb$x < C, 0, tb$x)
nd$x1 <- ifelse(nd$x < C, 0, nd$x)
fit.1 <- lm(y ~ x1 + ((x1<C)*x), data=tb)
nd$pred.1 <- predict(fit.1, new=nd)
with(nd, lines(pred.1 ~ x, col="black", lty = 2))
# FIT-2
tb$x2 <- ifelse(tb$x < C, 0, 1)
nd$x2 <- ifelse(nd$x < C, 0, 1)
fit.2 <- lm(y ~ x2 + x, data=tb)
nd$pred.2 <- predict(fit.2, new=nd)
with(nd, lines(pred.2 ~ x, col="blue"))
# FIT-3
tb$x3 <- ifelse(tb$x < C, 0, tb$x)
nd$x3 <- ifelse(nd$x < C, 0, nd$x)
fit.3 <- lm(y ~ x3 + x, data=tb)
nd$pred.3 <- predict(fit.3, new=nd)
with(nd, lines(pred.3 ~ x, col="purple"))
# FIT-4
tb$x4 <- ifelse(tb$x < C, 0, tb$x-C)
nd$x4 <- ifelse(nd$x < C, 0, nd$x-C)
fit.4 <- lm(y ~ x4 + x, data=tb)
nd$pred.4 <- predict(fit.4, new=nd)
with(nd, lines(pred.4 ~ x, col="red"))
# FIT-5
tb$x5 <- ifelse(tb$x >= C, 0, tb$x-C)
nd$x5 <- ifelse(nd$x >= C, 0, nd$x-C)
fit.5 <- lm(y ~ x5, data=tb)
nd$pred.5 <- predict(fit.5, new=nd)
with(nd, lines(pred.5 ~ x, col="green"))
logLik(fit.1)
logLik(fit.2)
logLik(fit.3)
summary(fit.1)
summary(fit.2)
summary(fit.3)
summary(fit.4)
summary(fit.5)
# a. Em termos de qualidade de ajuste expressa pela soma de quadrados de resíduo, o modelo que pior se ajustou aos dados foi o modelo 2.
#
sqr1 <- sum(summary(fit.1)$residuals^2)
sqr2 <- sum(summary(fit.2)$residuals^2)
sqr3 <- sum(summary(fit.3)$residuals^2)
sqr4 <- sum(summary(fit.4)$residuals^2)
sqr5 <- sum(summary(fit.5)$residuals^2)
max(sqr1,sqr2,sqr3,sqr4,sqr5) == sqr2
#FALSE
# b. A soma de quadrados residual do modelo 1 é 4.258
sqr1
tb <-structure(list(x = c(0.17, 0.88, 0.94, 0.98, 1.66, 1.69, 1.88,
1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
tb <-structure(list(x = c(0.17, 0.88, 0.94, 0.98, 1.66, 1.69, 1.88,
1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
tb <-structure(list(x = c(0.17, 0.88, 0.94, 0.98, 1.66, 1.69, 1.88,
1.95, 2.28, 2.77, 3.77, 3.8, 4.45, 4.63, 4.94, 5.99, 6.89, 7.32,
7.33, 7.37, 7.44, 8.56, 11.6, 12.91, 13.73), y = c(1.88, 2.11,
2.31, 2.39, 3.05, 2.63, 3.26, 2.7, 3.74, 4.41, 5.39, 5.7, 6.8,
6.92, 6.66, 7.69, 8.55, 8.31, 8.65, 8.26, 8.46, 8.66, 8.17, 9.17,
9.28)), class = "data.frame", row.names = c(NA, -25L))
c <- 6
## Grupo
tb$g <- ifelse(tb$x < c, 0, 1)
library(ggplot2)
theme_set(theme_minimal())
# Modelo 1 ---------------------------------------
# Taxa de variação e intercepto diferentes
fit1 <- lm(y ~ x + g + I(g * x), data = tb)
# Modelo 2 ---------------------------------------
## Só muda o intercepto a taxa de variação continua a mesma
fit2 <- lm(y ~ x + g, data = tb)
# Modelo 3 ---------------------------------------
## Mesma origem
fit3 <- lm(y ~ x + I(x * g), data = tb)
# Modelo 4 ---------------------------------------
## Continuidade
fit4 <- lm(y ~ x + I((x - c) * g), data=tb)
# Modelo 5 ---------------------------------------
## Continuidade + Constante
fit5 <- lm(y ~ I((x - c) * (g - 1)), data = tb)
# Todos gráficos ---------------------------------------------------------------
tb2 <- data.frame(x = seq(0, 14, by = 0.05))
tb2$g <- ifelse(tb2$x < c, 0, 1)
tb2$pred1 <- predict(fit1, newdata = tb2)
tb2$pred2 <- predict(fit2, newdata = tb2)
tb2$pred3 <- predict(fit3, newdata = tb2)
tb2$pred4 <- predict(fit4, newdata = tb2)
tb2$pred5 <- predict(fit5, newdata = tb2)
tb2 <- tidyr::gather(tb2, pred, value, -x, -g)
write.csv(tb2, "ScoobyDoo.csv", row.names = T)
ggplot(tb2, aes(x = x, y = value, group = g)) +
geom_point(data = tb, aes(x = x, y = y)) +
geom_line() +
facet_wrap(~pred)
options(digits = 4)
fit4
fit1
tb <-
structure(list(x = c(0.01, 0.91, 1.55, 2.22, 3.01, 3.39, 3.93,
3.99, 4.08, 4.97, 5.38, 6.22, 6.59, 6.94, 7.47, 8.29, 8.88, 10.41,
10.7, 10.87, 10.97, 12.17, 12.32, 12.46, 12.95),
y = c(1.72, 2.01, 3.03, 2.97, 4.44, 4.69, 6, 4.74, 5.14, 6.15, 5.28, 6.8,
6.48, 6.8, 6.71, 6.57, 6.47, 7.18, 7.01, 7.78, 6.59, 7.38, 7.22,
8.03, 7.49)), class = "data.frame", row.names = c(NA, -25L))
tb
plot(y ~x, data = tb)
C = 6
nd <- data.frame(x = seq(0, 14, by = 0.05))
#nd$x[nd$x == 6.1] <- NA
nd$x[nd$x == 6] <- NA
#################################################################
# FIT-1
tb$x1 <- ifelse(tb$x < C, 0, tb$x)
nd$x1 <- ifelse(nd$x < C, 0, nd$x)
fit.1 <- lm(y ~ x1 + ((x1<C)*x), data=tb)
nd$pred.1 <- predict(fit.1, new=nd)
with(nd, lines(pred.1 ~ x, col="black", lty = 2))
# FIT-2
tb$x2 <- ifelse(tb$x < C, 0, 1)
nd$x2 <- ifelse(nd$x < C, 0, 1)
# FIT-2
tb$x2 <- ifelse(tb$x < C, 0, 1)
nd$x2 <- ifelse(nd$x < C, 0, 1)
fit.2 <- lm(y ~ x2 + x, data=tb)
nd$pred.2 <- predict(fit.2, new=nd)
with(nd, lines(pred.2 ~ x, col="blue"))
# FIT-3
tb$x3 <- ifelse(tb$x < C, 0, tb$x)
nd$x3 <- ifelse(nd$x < C, 0, nd$x)
fit.3 <- lm(y ~ x3 + x, data=tb)
nd$pred.3 <- predict(fit.3, new=nd)
with(nd, lines(pred.3 ~ x, col="purple"))
# FIT-4
tb$x4 <- ifelse(tb$x < C, 0, tb$x-C)
nd$x4 <- ifelse(nd$x < C, 0, nd$x-C)
fit.4 <- lm(y ~ x4 + x, data=tb)
nd$pred.4 <- predict(fit.4, new=nd)
with(nd, lines(pred.4 ~ x, col="red"))
# FIT-5
tb$x5 <- ifelse(tb$x >= C, 0, tb$x-C)
nd$x5 <- ifelse(nd$x >= C, 0, nd$x-C)
fit.5 <- lm(y ~ x5, data=tb)
nd$pred.5 <- predict(fit.5, new=nd)
with(nd, lines(pred.5 ~ x, col="green"))
logLik(fit.1)
logLik(fit.2)
logLik(fit.3)
summary(fit.1)
summary(fit.2)
summary(fit.3)
summary(fit.4)
summary(fit.5)
# a. Em termos de qualidade de ajuste expressa pela soma de quadrados de resíduo, o modelo que pior se ajustou aos dados foi o modelo 2.
#
sqr1 <- sum(summary(fit.1)$residuals^2)
sqr2 <- sum(summary(fit.2)$residuals^2)
sqr3 <- sum(summary(fit.3)$residuals^2)
sqr4 <- sum(summary(fit.4)$residuals^2)
sqr5 <- sum(summary(fit.5)$residuals^2)
sqr4 <- sum(summary(fit.4)$residuals^2)
sqr4
